/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.io.File;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ashan Lakshitha
 */
public class SaleReport extends javax.swing.JDialog {

    /**
     * Creates new form ExpireNotify
     */
    
    DB d = new DB();
    DefaultTableModel dtm , dtm2 , dtm3;
    int xmouse , ymouse;
    DecimalFormat df;
    SimpleDateFormat sdf ;
    SimpleDateFormat sdf1 ;
    
    public SaleReport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dtm = (DefaultTableModel) returnsaletable.getModel();
        dtm2 = (DefaultTableModel) saletable.getModel();
        dtm3 = (DefaultTableModel) cardtable.getModel();
        df = new DecimalFormat(" #,##0.00");
        todate.setMaxDate(Calendar.getInstance());
        fromdate.setMaxDate(todate.getCurrent());
        todate.setMinDate(fromdate.getCurrent());
        sdf = new SimpleDateFormat("yyyy MM dd");
        sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        todate.setDateFormat(sdf1);
        fromdate.setDateFormat(sdf1);
        searchtable();
        setselectpanel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        fromdate = new datechooser.beans.DateChooserCombo();
        todate = new datechooser.beans.DateChooserCombo();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        changepanel = new javax.swing.JPanel();
        returnsale = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        returnsaletable = new javax.swing.JTable();
        card = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cardtable = new javax.swing.JTable();
        sale = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        saletable = new javax.swing.JTable();
        returnrb = new javax.swing.JRadioButton();
        salerb = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        totalsaletxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        totalreturntxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cashbalancetxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        cardbalancetxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cardrb = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sales Report");
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        fromdate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                fromdateOnSelectionChange(evt);
            }
        });
        fromdate.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                fromdateOnCommit(evt);
            }
        });

        todate.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                todateOnCommit(evt);
            }
        });
        todate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                todateOnSelectionChange(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("From");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("To");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        changepanel.setLayout(new java.awt.CardLayout());

        jScrollPane2.setBackground(new java.awt.Color(102, 102, 255));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        returnsaletable.setFont(new java.awt.Font("Iskoola Pota", 1, 14)); // NOI18N
        returnsaletable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Price", "Qty", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        returnsaletable.setRowHeight(30);
        returnsaletable.setSelectionBackground(new java.awt.Color(0, 153, 153));
        returnsaletable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                returnsaletableFocusGained(evt);
            }
        });
        returnsaletable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnsaletableMouseClicked(evt);
            }
        });
        returnsaletable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                returnsaletablePropertyChange(evt);
            }
        });
        returnsaletable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                returnsaletableVetoableChange(evt);
            }
        });
        jScrollPane2.setViewportView(returnsaletable);
        if (returnsaletable.getColumnModel().getColumnCount() > 0) {
            returnsaletable.getColumnModel().getColumn(0).setResizable(false);
            returnsaletable.getColumnModel().getColumn(1).setResizable(false);
            returnsaletable.getColumnModel().getColumn(1).setPreferredWidth(180);
            returnsaletable.getColumnModel().getColumn(2).setResizable(false);
            returnsaletable.getColumnModel().getColumn(3).setResizable(false);
            returnsaletable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout returnsaleLayout = new javax.swing.GroupLayout(returnsale);
        returnsale.setLayout(returnsaleLayout);
        returnsaleLayout.setHorizontalGroup(
            returnsaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, returnsaleLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                .addContainerGap())
        );
        returnsaleLayout.setVerticalGroup(
            returnsaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(returnsaleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        changepanel.add(returnsale, "card2");

        jScrollPane4.setBackground(new java.awt.Color(102, 102, 255));
        jScrollPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cardtable.setFont(new java.awt.Font("Iskoola Pota", 1, 14)); // NOI18N
        cardtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice", "Date", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cardtable.setRowHeight(30);
        cardtable.setSelectionBackground(new java.awt.Color(0, 153, 153));
        cardtable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cardtableFocusGained(evt);
            }
        });
        cardtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cardtableMouseClicked(evt);
            }
        });
        cardtable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cardtablePropertyChange(evt);
            }
        });
        cardtable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                cardtableVetoableChange(evt);
            }
        });
        jScrollPane4.setViewportView(cardtable);
        if (cardtable.getColumnModel().getColumnCount() > 0) {
            cardtable.getColumnModel().getColumn(0).setResizable(false);
            cardtable.getColumnModel().getColumn(1).setResizable(false);
            cardtable.getColumnModel().getColumn(1).setPreferredWidth(180);
            cardtable.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout cardLayout = new javax.swing.GroupLayout(card);
        card.setLayout(cardLayout);
        cardLayout.setHorizontalGroup(
            cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                .addContainerGap())
        );
        cardLayout.setVerticalGroup(
            cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        changepanel.add(card, "card2");

        jScrollPane3.setBackground(new java.awt.Color(102, 102, 255));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        saletable.setFont(new java.awt.Font("Iskoola Pota", 1, 14)); // NOI18N
        saletable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Price", "Qty", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        saletable.setRowHeight(30);
        saletable.setSelectionBackground(new java.awt.Color(0, 153, 153));
        saletable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                saletableFocusGained(evt);
            }
        });
        saletable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saletableMouseClicked(evt);
            }
        });
        saletable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                saletablePropertyChange(evt);
            }
        });
        saletable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                saletableVetoableChange(evt);
            }
        });
        jScrollPane3.setViewportView(saletable);
        if (saletable.getColumnModel().getColumnCount() > 0) {
            saletable.getColumnModel().getColumn(0).setResizable(false);
            saletable.getColumnModel().getColumn(1).setResizable(false);
            saletable.getColumnModel().getColumn(1).setPreferredWidth(180);
            saletable.getColumnModel().getColumn(2).setResizable(false);
            saletable.getColumnModel().getColumn(2).setHeaderValue("Price");
            saletable.getColumnModel().getColumn(3).setResizable(false);
            saletable.getColumnModel().getColumn(3).setHeaderValue("Qty");
            saletable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout saleLayout = new javax.swing.GroupLayout(sale);
        sale.setLayout(saleLayout);
        saleLayout.setHorizontalGroup(
            saleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saleLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                .addContainerGap())
        );
        saleLayout.setVerticalGroup(
            saleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        changepanel.add(sale, "card2");

        buttonGroup1.add(returnrb);
        returnrb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        returnrb.setText("Return");
        returnrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnrbActionPerformed(evt);
            }
        });

        buttonGroup1.add(salerb);
        salerb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        salerb.setText("Sale");
        salerb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salerbActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Sales Report"));

        totalsaletxt.setEditable(false);
        totalsaletxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalsaletxt.setForeground(new java.awt.Color(51, 51, 51));
        totalsaletxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalsaletxt.setText("0.00");
        totalsaletxt.setToolTipText("");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Total Sale");

        totalreturntxt.setEditable(false);
        totalreturntxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalreturntxt.setForeground(new java.awt.Color(51, 51, 51));
        totalreturntxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalreturntxt.setText("0.00");
        totalreturntxt.setToolTipText("");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Total Return");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Cash Balance");

        cashbalancetxt.setEditable(false);
        cashbalancetxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cashbalancetxt.setForeground(new java.awt.Color(51, 51, 51));
        cashbalancetxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cashbalancetxt.setText("0.00");
        cashbalancetxt.setToolTipText("");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Print Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cardbalancetxt.setEditable(false);
        cardbalancetxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cardbalancetxt.setForeground(new java.awt.Color(51, 51, 51));
        cardbalancetxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cardbalancetxt.setText("0.00");
        cardbalancetxt.setToolTipText("");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Card Balance");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalsaletxt, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalreturntxt, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardbalancetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cashbalancetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(1, 1, 1)
                        .addComponent(cardbalancetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cashbalancetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(1, 1, 1)
                        .addComponent(totalreturntxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, 0)
                        .addComponent(totalsaletxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        buttonGroup1.add(cardrb);
        cardrb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cardrb.setText("Card Payments");
        cardrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardrbActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/inv (3).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(salerb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(returnrb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cardrb, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(changepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fromdate, todate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(returnrb)
                        .addComponent(salerb)
                        .addComponent(cardrb))
                    .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(changepanel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        this.setLocation(x - xmouse, y - ymouse);
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_formMouseReleased

    private void returnsaletableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_returnsaletableVetoableChange
        //
    }//GEN-LAST:event_returnsaletableVetoableChange

    private void returnsaletablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_returnsaletablePropertyChange
        //
    }//GEN-LAST:event_returnsaletablePropertyChange

    private void returnsaletableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_returnsaletableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_returnsaletableFocusGained

    private void returnsaletableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnsaletableMouseClicked
        //setSelecteditem();
    }//GEN-LAST:event_returnsaletableMouseClicked

    private void fromdateOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_fromdateOnCommit
        searchtable();
    }//GEN-LAST:event_fromdateOnCommit

    private void fromdateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_fromdateOnSelectionChange
        todate.setMinDate(fromdate.getCurrent());
        searchtable();
    }//GEN-LAST:event_fromdateOnSelectionChange

    private void todateOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_todateOnCommit
        searchtable();
    }//GEN-LAST:event_todateOnCommit

    private void todateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_todateOnSelectionChange
        fromdate.setMaxDate(todate.getCurrent());
        searchtable();
    }//GEN-LAST:event_todateOnSelectionChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        searchtable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void saletableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saletableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_saletableMouseClicked

    private void saletableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_saletableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_saletableFocusGained

    private void saletablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_saletablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_saletablePropertyChange

    private void saletableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_saletableVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_saletableVetoableChange

    private void salerbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salerbActionPerformed
        setselectpanel();
    }//GEN-LAST:event_salerbActionPerformed

    private void returnrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnrbActionPerformed
        setselectpanel();
    }//GEN-LAST:event_returnrbActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        printreport();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cardrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardrbActionPerformed
        setselectpanel();
    }//GEN-LAST:event_cardrbActionPerformed

    private void cardtableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cardtableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cardtableFocusGained

    private void cardtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cardtableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cardtableMouseClicked

    private void cardtablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cardtablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cardtablePropertyChange

    private void cardtableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_cardtableVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cardtableVetoableChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SaleReport dialog = new SaleReport(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel card;
    private javax.swing.JTextField cardbalancetxt;
    private javax.swing.JRadioButton cardrb;
    private javax.swing.JTable cardtable;
    private javax.swing.JTextField cashbalancetxt;
    private javax.swing.JPanel changepanel;
    private datechooser.beans.DateChooserCombo fromdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JRadioButton returnrb;
    private javax.swing.JPanel returnsale;
    private javax.swing.JTable returnsaletable;
    private javax.swing.JPanel sale;
    private javax.swing.JRadioButton salerb;
    private javax.swing.JTable saletable;
    private datechooser.beans.DateChooserCombo todate;
    private javax.swing.JTextField totalreturntxt;
    private javax.swing.JTextField totalsaletxt;
    // End of variables declaration//GEN-END:variables

    
  private void searchtable()
  {
    
      double totalsale = 0.0;
      
    try
    {
      this.dtm.setRowCount(0);
      this.dtm2.setRowCount(0);
      
      this.totalsaletxt.setText("0.00");
      this.totalreturntxt.setText("0.00");
      
      ResultSet rs = this.d.srh("SELECT\n     avg(invoice.`price`) AS avg_price,\n     sum(invoice.`qty`) AS qty,\n     sum(invoice.`subtotal`) AS invoice_subtotal,\n     invoice.`stock_product_id` AS product_id,\n     product.`name` AS product_name,\n     product.`brand_name` AS product_brand_name,\n     invoice_reg.`date` AS invoice_reg_date,\n     invoice_reg.`id` AS invoice_reg_id,\n     invoice.`invoice_reg_id` AS invoice_invoice_reg_id\nFROM\n     `invoice` invoice INNER JOIN `product` product ON invoice.`stock_product_id` = product.`id`\n     INNER JOIN `invoice_reg` invoice_reg ON invoice.`invoice_reg_id` = invoice_reg.`id`\nwhere invoice_reg.date between '" + this.fromdate
      
        .getText() + " 00:00:00 ' and '" + this.todate.getText() + " 23:59:59 ' \ngroup by stock_product_id");
      
      this.finalsaletotal = Double.valueOf(0.0D);
      while (rs.next())
      {
        Vector v = new Vector();
        v.add(rs.getString("product_id"));
        v.add(rs.getString("product_name"));
        v.add(this.df.format(rs.getDouble("avg_price")));
        v.add(Double.valueOf(rs.getDouble("qty")));
        v.add(this.df.format(rs.getDouble("invoice_subtotal")));
        totalsale += rs.getDouble("invoice_subtotal");
        this.finalsaletotal = Double.valueOf(totalsale);
        this.totalsaletxt.setText(this.df.format(totalsale));
        this.dtm.addRow(v);
      }
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
    
    double totalreturn = 0.0D;
    
    try
    {
      ResultSet rs2 = this.d.srh("SELECT * from invoice_return inner join product on invoice_return.invoice_stock_product_id = product.id where invoice_return.`rdate` between '" + this.fromdate
      
        .getText() + " 00:00:00 ' and '" + this.todate.getText() + " 23:59:59' ");
      
      this.finalreturntotal = Double.valueOf(0.0D);
      
      while (rs2.next())
      {
        Vector v = new Vector();
        v.add(rs2.getString("invoice_stock_product_id"));
        v.add(rs2.getString("name"));
        v.add(this.df.format(rs2.getDouble("price")));
        v.add(Double.valueOf(rs2.getDouble("qty")));
        v.add(this.df.format(rs2.getDouble("total")));
        totalreturn += rs2.getDouble("total");
        this.finalreturntotal = Double.valueOf(totalreturn);
        this.totalreturntxt.setText(this.df.format(totalreturn));
        
        this.dtm2.addRow(v);
      }
      
      cashbalancetxt.setText(df.format(totalsale - totalreturn));
      
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
    
    
    double cardtotal = 0.0D;
    try{
      ResultSet rs2 = this.d.srh("SELECT * from invoice_reg where invoice_reg.`date` between '" + this.fromdate.getText() + " 00:00:00 ' and '" + this.todate.getText() + " 23:59:59' and ptype = 2");
      
      cardtotal = Double.valueOf(0.0D);
      
      while (rs2.next()){
        Vector v = new Vector();
        v.add(rs2.getString("id"));
        v.add(rs2.getString("date"));
        v.add(this.df.format(rs2.getDouble("total")));
        cardtotal += rs2.getDouble("total");
        this.cardbalancetxt.setText(this.df.format(cardtotal));
        this.dtm3.addRow(v);
      }
      this.cardbalancetxt.setText(this.df.format(cardtotal));
      cashbalancetxt.setText(df.format(totalsale - totalreturn - cardtotal));
      
    }catch (Exception e){
      e.printStackTrace();
    }
    
  }
  
  Double finalsaletotal = Double.valueOf(0.0D);
  Double finalreturntotal = Double.valueOf(0.0D);
  Double dis = Double.valueOf(0.0D);
  
  private void setselectpanel()
  {
    this.changepanel.removeAll();
    this.changepanel.revalidate();
    if (this.returnrb.isSelected())
    {
      this.changepanel.add(this.sale);
      this.changepanel.revalidate();
    }
    else if (this.salerb.isSelected())
    {
      this.changepanel.add(this.returnsale);
      this.changepanel.revalidate();
    }
    else if (this.cardrb.isSelected())
    {
      this.changepanel.add(this.card);
      this.changepanel.revalidate();
    }
    else
    {
      this.salerb.setSelected(true);
      setselectpanel();
    }
  }

    private void printreport() {
    
        try{
          JasperReport jr = (JasperReport)JRLoader.loadObject(new File("C:\\Program Files (x86)\\POS\\dailyreport.jasper"));

          Map m = new HashMap();

          m.put("start", fromdate.getText());
          m.put("end", todate.getText());
          m.put("s", totalsaletxt.getText());
          m.put("r", totalreturntxt.getText());
          m.put("b", cashbalancetxt.getText());          

          JasperPrint jp = JasperFillManager.fillReport(jr, m, this.d.getConnection());

          //JasperViewer.viewReport(jp, false);
          JasperPrintManager.printReport(jp, true);
        
        }catch (Exception e){
          JOptionPane.showMessageDialog(this, e);
        }
    
    }
 
    
}
