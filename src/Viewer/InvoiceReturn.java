/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.io.File;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Ashan Lakshitha
 */
public class InvoiceReturn extends javax.swing.JDialog {

    /**
     * Creates new form InvoiceReturn
     */
    DB d = new DB();
    DefaultTableModel dtm;
    String user = "admin";
    private int Xmouse;
    private int Ymouse;
    
    public InvoiceReturn(java.awt.Frame parent, boolean modal ,String u) {
        super(parent, modal);
        initComponents();
        user = u;
        dtm = (DefaultTableModel) invtable.getModel();
        // totalgen();
        setFrontText();
    }
    
    private void setFrontText(){
        setPront(invsearchtxt, "Type Invoice ID ");
    }
    
    private void setPront(JTextField a , String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        invsearchtxt = new javax.swing.JTextField();
        srhbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        invtable = new javax.swing.JTable();
        addtolistbtn2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        prosearchtxt = new javax.swing.JTextField();
        srhbtn1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        addtolistbtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setOpaque(false);

        invsearchtxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        invsearchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invsearchtxtActionPerformed(evt);
            }
        });
        invsearchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invsearchtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                invsearchtxtKeyTyped(evt);
            }
        });

        srhbtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        srhbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ui_04_of_9-15-20.png"))); // NOI18N
        srhbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srhbtnActionPerformed(evt);
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(102, 102, 255));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        invtable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        invtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sale ID", "Product ID", "Name", "Batch No#", "Price", "Qty", "Sub Total", "Return_Qty", "Customer", "InvoiceNo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invtable.setRowHeight(20);
        invtable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        invtable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                invtableFocusGained(evt);
            }
        });
        invtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invtableMouseClicked(evt);
            }
        });
        invtable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                invtablePropertyChange(evt);
            }
        });
        invtable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                invtableVetoableChange(evt);
            }
        });
        jScrollPane2.setViewportView(invtable);
        if (invtable.getColumnModel().getColumnCount() > 0) {
            invtable.getColumnModel().getColumn(0).setResizable(false);
            invtable.getColumnModel().getColumn(0).setPreferredWidth(8);
            invtable.getColumnModel().getColumn(1).setResizable(false);
            invtable.getColumnModel().getColumn(1).setPreferredWidth(35);
            invtable.getColumnModel().getColumn(2).setResizable(false);
            invtable.getColumnModel().getColumn(2).setPreferredWidth(100);
            invtable.getColumnModel().getColumn(3).setResizable(false);
            invtable.getColumnModel().getColumn(3).setPreferredWidth(25);
            invtable.getColumnModel().getColumn(4).setResizable(false);
            invtable.getColumnModel().getColumn(4).setPreferredWidth(30);
            invtable.getColumnModel().getColumn(5).setResizable(false);
            invtable.getColumnModel().getColumn(5).setPreferredWidth(25);
            invtable.getColumnModel().getColumn(6).setResizable(false);
            invtable.getColumnModel().getColumn(6).setPreferredWidth(30);
            invtable.getColumnModel().getColumn(7).setResizable(false);
            invtable.getColumnModel().getColumn(7).setPreferredWidth(30);
            invtable.getColumnModel().getColumn(8).setResizable(false);
            invtable.getColumnModel().getColumn(8).setPreferredWidth(30);
            invtable.getColumnModel().getColumn(9).setResizable(false);
        }

        addtolistbtn2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        addtolistbtn2.setText("Clear");
        addtolistbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtolistbtn2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Search By Invoice No#");

        prosearchtxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        prosearchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prosearchtxtActionPerformed(evt);
            }
        });
        prosearchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prosearchtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prosearchtxtKeyTyped(evt);
            }
        });

        srhbtn1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        srhbtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ui_04_of_9-15-20.png"))); // NOI18N
        srhbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srhbtn1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Search By Product No#");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180)
                        .addComponent(addtolistbtn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(invsearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(srhbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(prosearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(srhbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(srhbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(invsearchtxt)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(srhbtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(prosearchtxt))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(addtolistbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        addtolistbtn1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        addtolistbtn1.setText("Delete");
        addtolistbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtolistbtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addtolistbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addtolistbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void invsearchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invsearchtxtActionPerformed
        
    }//GEN-LAST:event_invsearchtxtActionPerformed

    int selected = 0;
    private void invsearchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invsearchtxtKeyReleased
        //clear(1);
        searchInvoice();
    }//GEN-LAST:event_invsearchtxtKeyReleased

    private void invsearchtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invsearchtxtKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c))){
            evt.consume();
        }
    }//GEN-LAST:event_invsearchtxtKeyTyped

    private void srhbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srhbtnActionPerformed
//        clear(1);
        searchInvoice();
    }//GEN-LAST:event_srhbtnActionPerformed

    private void invtablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_invtablePropertyChange
        //
    }//GEN-LAST:event_invtablePropertyChange

    private void invtableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_invtableVetoableChange
        //
    }//GEN-LAST:event_invtableVetoableChange

    private void invtableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_invtableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_invtableFocusGained

    private void invtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invtableMouseClicked
            //setSelecteditem();
    }//GEN-LAST:event_invtableMouseClicked

    private void addtolistbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtolistbtn1ActionPerformed
       if(dtm.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "Please add Return Products");
        }else{
            returnPro();
        }
    }//GEN-LAST:event_addtolistbtn1ActionPerformed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_formMouseReleased

    private void prosearchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prosearchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prosearchtxtActionPerformed

    private void prosearchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prosearchtxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_prosearchtxtKeyReleased

    private void prosearchtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prosearchtxtKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_prosearchtxtKeyTyped

    private void srhbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srhbtn1ActionPerformed
        searchByProduct();
    }//GEN-LAST:event_srhbtn1ActionPerformed

    private void addtolistbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtolistbtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addtolistbtn2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InvoiceReturn dialog = new InvoiceReturn(new javax.swing.JFrame(), true ,  "admin");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtolistbtn1;
    private javax.swing.JButton addtolistbtn2;
    private javax.swing.JTextField invsearchtxt;
    private javax.swing.JTable invtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField prosearchtxt;
    private javax.swing.JButton srhbtn;
    private javax.swing.JButton srhbtn1;
    // End of variables declaration//GEN-END:variables

    private void searchInvoice() {
        try {
            dtm.setRowCount(0);
            
            ResultSet rs = d.srh("SELECT * FROM invoice inner join product on "
                    + "invoice.stock_product_id = product.id "
                    + "inner join invoice_reg on invoice_reg.id = invoice.invoice_reg_id where invoice_reg_id = '"+invsearchtxt.getText()+"'  ");
            while (rs.next()) {                
                Vector v = new Vector();
                v.add(rs.getString("saleid"));
                v.add(rs.getString("stock_product_id"));
                v.add(rs.getString("name"));
                v.add(rs.getString("stock_id"));
                v.add(rs.getDouble("price"));
                v.add(rs.getDouble("qty"));
                v.add(rs.getDouble("subtotal"));
                v.add(rs.getDouble("rqty"));
                v.add(rs.getString("customer_id"));
                v.add(rs.getString("invoice.invoice_reg_id"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }
    
    
    private void searchByProduct() {
        try {
            dtm.setRowCount(0);
            
            ResultSet rs = d.srh("SELECT * FROM invoice inner join product on "
                    + "invoice.stock_product_id = product.id "
                    + "inner join invoice_reg on invoice_reg.id = invoice.invoice_reg_id where invoice.stock_product_id = '"+prosearchtxt.getText()+"' order by saleid DESC  ");
            while (rs.next()) {                
                Vector v = new Vector();
                v.add(rs.getString("saleid"));
                v.add(rs.getString("stock_product_id"));
                v.add(rs.getString("name"));
                v.add(rs.getString("stock_id"));
                v.add(rs.getDouble("price"));
                v.add(rs.getDouble("qty"));
                v.add(rs.getDouble("subtotal"));
                v.add(rs.getDouble("rqty"));
                v.add(rs.getString("customer_id"));
                v.add(rs.getString("invoice.invoice_reg_id"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }

    String invoiceid ="";
    String saleid = "";
    String name = "";
    String pid = "";
    String batch = "";
    String cus = "0";
    double price = 0.0;
    double qty = 0.0;
    double returnqty = 0.0;
    double avqty = 0.0;
    

    private void returnPro() {
        
        int a = 0; 
        int b = 0;      
        
        try {
                int maxid = d.nextnum("select max(rid) from invoice_return", "max(rid)");
                
                    int i = invtable.getSelectedRow();
                    
                    if (i == -1){
                      JOptionPane.showMessageDialog(this, "Select Row to delete");
                    }else{
                    
                    String invid = dtm.getValueAt(i, 9).toString();
                    String saleid = dtm.getValueAt(i, 0).toString();
                    String proid = dtm.getValueAt(i, 1).toString();
                    String subtotal = dtm.getValueAt(i, 6).toString();
                    String price = dtm.getValueAt(i, 4).toString();
                    String stockid = dtm.getValueAt(i, 3).toString();
                    String qty =  dtm.getValueAt(i, 5).toString();
                    String cus =  dtm.getValueAt(i, 8).toString();
                    
                    b = d.aud("insert into invoice_return(  invoice_saleid, invoice_invoice_reg_id, invoice_stock_id, invoice_stock_product_id, qty, price, total ,rdate , rid , cus ) "
                            + "Values( '"+saleid+"' , '"+invid+"' , '"+stockid+"' , '"+proid+"' , '"+qty+"' , '"+price+"' , '"+subtotal+"' , NOW() , '"+maxid+"'  , '"+cus+"' )");
                    d.aud("update stock set avqty = avqty + '"+qty+"' where id = '"+stockid+"' ");
                
                    if(a==1 | b==1){
                        JOptionPane.showMessageDialog(this, "Return Products Successfully. ");
                        //printReport(maxid);
                        tbclear();
                    }else{
                        JOptionPane.showMessageDialog(this, "Return Failed ");
                    }
                    
                    }
                    
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    
    }

    private void printReport(int returnid) {
        try {
        JasperReport jr = (JasperReport)JRLoader.loadObject(new File("C:\\Program Files (x86)\\Pulina Oil\\Return-reciept.jasper"));
        //2insert paramters
        java.util.Map m = new java.util.HashMap();
        m.put("ID", returnid);
        //3 run engine
        JasperPrint jp = JasperFillManager.fillReport(jr, m, d.getConnection());
        //4 view result
        JasperViewer.viewReport(jp, false);
        
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    private void tbclear() {
        prosearchtxt.setText("");
        invsearchtxt.setText("");
        dtm.setRowCount(0);
    }
    
}
