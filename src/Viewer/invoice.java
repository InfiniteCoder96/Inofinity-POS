/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import Model.Display;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.io.File;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javafx.scene.input.KeyCode;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Ashan Lakshitha
 */
public class invoice extends javax.swing.JDialog {

    /**
     * Creates new form invoice
     */
    DB d = new DB();
    DefaultListModel jlm;
    DefaultListModel jlm1;
    DefaultListModel dlm1;
    DefaultTableModel dtm;
    DefaultTableModel dtm1;
    DefaultTableModel dtm2;
    String user;
    NumberFormat formatter = new DecimalFormat("#0.00");    
    //Display display=new Display();
    
    public invoice(java.awt.Frame parent, boolean modal ,  String u ) {
        super(parent, modal);
        initComponents();
        user = u;
        cashrb.setSelected(true);
        radio2.setSelected(true);
        setpanel();
        setFrontText();
        this.jlm = new DefaultListModel();
        this.jlm1 = new DefaultListModel();
        this.dlm1 = new DefaultListModel();
        this.dtm = ((DefaultTableModel)this.jTable1.getModel());
        this.dtm1 = ((DefaultTableModel)this.rinvtable.getModel());
        this.dtm2 = ((DefaultTableModel)this.rinvtable2.getModel());
        
        this.numberlist1.setVisible(false);
        this.numberlist2.setVisible(false);
        
        pidtxt.setFocusTraversalKeysEnabled(false);
        cashpayment.setFocusTraversalKeysEnabled(false);
        qtytxt.setFocusTraversalKeysEnabled(false);
        pricetxt.setFocusTraversalKeysEnabled(false);
        numberlist1.setFocusTraversalKeysEnabled(false);
        
        try {
          int nestinvid = this.d.nextnum("select max(id) from invoice_reg", "max(id)");
          nextbillnotxt.setText(nestinvid + "");
        } catch (Exception ex) {
          ex.printStackTrace();
        } 
        
        this.mainpanel2.setVisible(false);
        this.cidtxt.setText("0");
        this.cinfotxt.setText("Cash Sale");

        clear(3);
        clear(4);
        clear(5);
        this.pidtxt.requestFocus();
        
//        display.StartDisplay(); 
//        display.PrintFirstLine("** SUGANDIKA SUPER **");
//        display.PrintSecondLine("NEXT CUSTOMER PLEASE");
        
    }
    
    private void setFrontText() {
        setPront(this.pidtxt, "New Barcode");
        setPront(this.qtytxt, "Qty");
        setPront(this.pricetxt, "Price");
        setPront(this.distxt, "Discount");
        setPront(this.totaltxt, "Total");
        setPront(this.invtxt, "Invoice ID");
        setPront(this.rpricetxt, "Return Price");
        setPront(this.rqtytxt, "Return Qty");
        setPront(this.rtotaltxt, "Total");
        setPront(this.rsubtotaltxt, "Sub Total");
        setPront(this.rtotal2txt, "Return Total");
        setPront(this.invtotaltxt, "Invoice Total");
        setPront(this.rpaymenttxt, "Payment");
        setPront(this.rduetxt, "Due");
    }

    private void setPront(JTextField a, String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }
    
    private void setPront(JTextArea a, String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        mainpanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        numberlist2 = new javax.swing.JScrollPane();
        numberlist1 = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        pidtxt = new javax.swing.JTextField();
        pnametxt = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        stocklbl = new javax.swing.JLabel();
        minlbl = new javax.swing.JLabel();
        maxlbl = new javax.swing.JLabel();
        wlbl = new javax.swing.JLabel();
        qtytxt = new javax.swing.JTextField();
        pricetxt = new javax.swing.JTextField();
        stockcombo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        subtotaltxt = new javax.swing.JLabel();
        distxt = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        itemcounttxt = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        nextbillnotxt = new javax.swing.JLabel();
        freeissuetxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cididtxt = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cidtxt = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        returnrb = new javax.swing.JRadioButton();
        creditcardrb = new javax.swing.JRadioButton();
        cashrb = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cashpayment = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        cashdue = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        totaltxt = new javax.swing.JTextField();
        cinfotxt = new javax.swing.JLabel();
        radio2 = new javax.swing.JRadioButton();
        radio1 = new javax.swing.JRadioButton();
        mainpanel2 = new javax.swing.JPanel();
        returnpanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        rinvtable = new javax.swing.JTable();
        rpricetxt = new javax.swing.JTextField();
        rsubtotaltxt = new javax.swing.JTextField();
        rqtytxt = new javax.swing.JTextField();
        invtxt = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        rinvtable2 = new javax.swing.JTable();
        rtotaltxt = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        invtotaltxt = new javax.swing.JTextField();
        rtotal2txt = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        finaltotaltxt = new javax.swing.JLabel();
        rduetxt = new javax.swing.JTextField();
        rpaymenttxt = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        finaltotaleror = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1130, 490));
        getContentPane().setLayout(new java.awt.CardLayout());

        mainpanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 230, -1));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("INVOICE");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, 34));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("create");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, 17));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/colored-03-48.png"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, 57));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("Customer Details");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, -1, 20));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setOpaque(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numberlist1.setBackground(new java.awt.Color(0, 0, 0));
        numberlist1.setFont(new java.awt.Font("Iskoola Pota", 1, 16)); // NOI18N
        numberlist1.setForeground(new java.awt.Color(255, 255, 255));
        numberlist1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        numberlist1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        numberlist1.setSelectionBackground(new java.awt.Color(0, 102, 102));
        numberlist1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                numberlist1MouseClicked(evt);
            }
        });
        numberlist1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numberlist1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberlist1KeyReleased(evt);
            }
        });
        numberlist1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                numberlist1ValueChanged(evt);
            }
        });
        numberlist2.setViewportView(numberlist1);

        jPanel3.add(numberlist2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 430, 180));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("Add Products To Invoice ");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 20));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 10, 300));

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ui_04_of_9-15-20.png"))); // NOI18N
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel6.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 30, 40));

        pidtxt.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        pidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidtxtActionPerformed(evt);
            }
        });
        pidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pidtxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pidtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pidtxtKeyTyped(evt);
            }
        });
        jPanel6.add(pidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 50));

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 32, -1, -1));

        pnametxt.setFont(new java.awt.Font("Iskoola Pota", 0, 18)); // NOI18N
        jPanel3.add(pnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 27, 210, 60));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Qty");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Our Price ");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Wholesale");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Retail");

        stocklbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        stocklbl.setForeground(new java.awt.Color(102, 0, 102));
        stocklbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stocklbl.setText("0");

        minlbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        minlbl.setForeground(new java.awt.Color(102, 0, 102));
        minlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minlbl.setText("0.00");

        maxlbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        maxlbl.setForeground(new java.awt.Color(102, 0, 102));
        maxlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        maxlbl.setText("0.00");

        wlbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        wlbl.setForeground(new java.awt.Color(102, 0, 102));
        wlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wlbl.setText("0.00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(stocklbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stocklbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(wlbl))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {maxlbl, minlbl, stocklbl, wlbl});

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 400, -1));

        qtytxt.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        qtytxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        qtytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtytxtActionPerformed(evt);
            }
        });
        qtytxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtytxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtytxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtytxtKeyTyped(evt);
            }
        });
        jPanel3.add(qtytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 90, 140, 50));

        pricetxt.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        pricetxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pricetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricetxtActionPerformed(evt);
            }
        });
        pricetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pricetxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pricetxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pricetxtKeyTyped(evt);
            }
        });
        jPanel3.add(pricetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 100, 50));

        stockcombo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        stockcombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stockcomboItemStateChanged(evt);
            }
        });
        jPanel3.add(stockcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 80, 50));

        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton1.setText("Add To List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 140, 50));

        subtotaltxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        subtotaltxt.setForeground(new java.awt.Color(255, 0, 51));
        subtotaltxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtotaltxt.setText("Rs. 0.00");
        jPanel3.add(subtotaltxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 146, 50));

        distxt.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        distxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        distxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distxtActionPerformed(evt);
            }
        });
        distxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                distxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                distxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                distxtKeyTyped(evt);
            }
        });
        jPanel3.add(distxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 70, 50));

        jLabel28.setText("%");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 94, 30, 40));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("ITEMS");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, 120, 30));

        itemcounttxt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        itemcounttxt.setForeground(new java.awt.Color(0, 153, 102));
        jPanel3.add(itemcounttxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, 120, 50));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("NEXT BILL NO");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 120, 30));

        nextbillnotxt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        nextbillnotxt.setForeground(new java.awt.Color(0, 153, 102));
        jPanel3.add(nextbillnotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 120, 50));

        freeissuetxt.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        freeissuetxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        freeissuetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freeissuetxtActionPerformed(evt);
            }
        });
        freeissuetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                freeissuetxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                freeissuetxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                freeissuetxtKeyTyped(evt);
            }
        });
        jPanel3.add(freeissuetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 80, 40));

        jLabel19.setText("Free Issue :");
        jPanel3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 144, -1, 20));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 420, 470));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add-80px-24.png"))); // NOI18N
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 20, 30));

        cididtxt.setBackground(new java.awt.Color(255, 255, 255));
        cididtxt.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(cididtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, 30, 20));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ui_04_of_9-15-20.png"))); // NOI18N
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 30, 30));

        cidtxt.setEditable(false);
        cidtxt.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        cidtxt.setFocusable(false);
        cidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidtxtActionPerformed(evt);
            }
        });
        cidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cidtxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cidtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cidtxtKeyTyped(evt);
            }
        });
        jPanel2.add(cidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 80, 37));

        jButton3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton3.setText("Pay Now");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 160, 140, 60));

        jTable1.setFont(new java.awt.Font("Iskoola Pota", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No#", "Barcode", "Name", "Price", "Qty", "Total", "Dis", "Free"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setName(""); // NOI18N
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 102));
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(40);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(40);
            jTable1.getColumnModel().getColumn(2).setMinWidth(250);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(250);
            jTable1.getColumnModel().getColumn(3).setMinWidth(80);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(4).setMinWidth(60);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(5).setMinWidth(80);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, 590, 270));

        buttonGroup1.add(returnrb);
        returnrb.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        returnrb.setText("Return ");
        returnrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnrbActionPerformed(evt);
            }
        });
        jPanel2.add(returnrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, -1, -1));

        buttonGroup1.add(creditcardrb);
        creditcardrb.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        creditcardrb.setText("Credit Card");
        creditcardrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditcardrbActionPerformed(evt);
            }
        });
        jPanel2.add(creditcardrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 60, -1, -1));

        buttonGroup1.add(cashrb);
        cashrb.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cashrb.setText("Cash");
        cashrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashrbActionPerformed(evt);
            }
        });
        jPanel2.add(cashrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Remove Row");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 510, 180, 30));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        cashpayment.setFont(new java.awt.Font("Century Gothic", 1, 32)); // NOI18N
        cashpayment.setForeground(new java.awt.Color(0, 153, 51));
        cashpayment.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cashpayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashpaymentActionPerformed(evt);
            }
        });
        cashpayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cashpaymentKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cashpaymentKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashpaymentKeyTyped(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(153, 255, 255));
        jLabel21.setText("Payment");

        jLabel24.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(153, 255, 255));
        jLabel24.setText("Balance");

        cashdue.setEditable(false);
        cashdue.setFont(new java.awt.Font("Century Gothic", 1, 32)); // NOI18N
        cashdue.setForeground(new java.awt.Color(0, 153, 51));
        cashdue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cashdue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashdueActionPerformed(evt);
            }
        });
        cashdue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cashdueKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashdueKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(153, 255, 255));
        jLabel17.setText("Total");

        totaltxt.setEditable(false);
        totaltxt.setFont(new java.awt.Font("Century Gothic", 1, 32)); // NOI18N
        totaltxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totaltxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totaltxtActionPerformed(evt);
            }
        });
        totaltxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totaltxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                totaltxtKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(66, 66, 66)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cashpayment, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(cashdue)
                    .addComponent(totaltxt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totaltxt)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cashpayment, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cashdue)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cashdue, cashpayment, totaltxt});

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, 360, 200));

        cinfotxt.setBackground(new java.awt.Color(255, 255, 255));
        cinfotxt.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cinfotxt.setForeground(new java.awt.Color(51, 51, 51));
        cinfotxt.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(cinfotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, 110, 30));

        buttonGroup2.add(radio2);
        radio2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radio2.setText("Retail");
        radio2.setOpaque(false);
        jPanel2.add(radio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 170, 20));

        buttonGroup2.add(radio1);
        radio1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radio1.setText("WholeSale");
        radio1.setOpaque(false);
        jPanel2.add(radio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 170, 20));

        javax.swing.GroupLayout mainpanel1Layout = new javax.swing.GroupLayout(mainpanel1);
        mainpanel1.setLayout(mainpanel1Layout);
        mainpanel1Layout.setHorizontalGroup(
            mainpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1031, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        mainpanel1Layout.setVerticalGroup(
            mainpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(mainpanel1, "card2");

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        rinvtable.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        rinvtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "Stockid", "Name", "Sell Price", "Qty", "Total", "Rqty", "..."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rinvtable.setGridColor(new java.awt.Color(102, 102, 102));
        rinvtable.setRowHeight(20);
        rinvtable.setSelectionBackground(new java.awt.Color(51, 51, 51));
        rinvtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rinvtableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(rinvtable);

        rpricetxt.setEditable(false);

        rsubtotaltxt.setEditable(false);

        rqtytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rqtytxtActionPerformed(evt);
            }
        });
        rqtytxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rqtytxtKeyReleased(evt);
            }
        });

        invtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                invtxtKeyTyped(evt);
            }
        });

        rinvtable2.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        rinvtable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "stockid", "Name", "Price", "Qty", "Total", "Invoice No#", "S"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rinvtable2.setGridColor(new java.awt.Color(102, 102, 102));
        rinvtable2.setRowHeight(20);
        rinvtable2.setSelectionBackground(new java.awt.Color(51, 51, 51));
        jScrollPane4.setViewportView(rinvtable2);

        rtotaltxt.setEditable(false);
        rtotaltxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtotaltxtActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(51, 51, 51));

        jLabel13.setBackground(new java.awt.Color(51, 51, 51));
        jLabel13.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(" Add Returns");
        jLabel13.setOpaque(true);

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setText("Back");
        jButton6.setBorder(null);
        jButton6.setOpaque(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
        );

        jButton7.setText("Remove Row");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rpricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rqtytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rsubtotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rtotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 952, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(invtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(rpricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rqtytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rsubtotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rtotaltxt)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel14.setBackground(new java.awt.Color(51, 51, 51));
        jLabel14.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText(" Payment and Checkout");
        jLabel14.setOpaque(true);

        invtotaltxt.setEditable(false);

        rtotal2txt.setEditable(false);

        jButton8.setText("Print");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel15.setText("Invoice Total");

        jLabel16.setText("Return Total");

        jLabel25.setText("Final Total");

        finaltotaltxt.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        finaltotaltxt.setForeground(new java.awt.Color(204, 0, 0));
        finaltotaltxt.setText("Rs. 1255.00");

        rduetxt.setEditable(false);
        rduetxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N

        rpaymenttxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        rpaymenttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpaymenttxtActionPerformed(evt);
            }
        });
        rpaymenttxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rpaymenttxtKeyReleased(evt);
            }
        });

        jLabel26.setText("Due");

        jLabel27.setText("Payment");

        finaltotaleror.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        finaltotaleror.setForeground(new java.awt.Color(153, 0, 0));
        finaltotaleror.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        finaltotaleror.setText("<html>* Cannot continue . <br> Please add products to Invoice <br> or Remove Returns </html>");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rtotal2txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(finaltotaleror, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(invtotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(finaltotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rduetxt)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rpaymenttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 964, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(4, 4, 4)
                                .addComponent(invtotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                                .addGap(0, 0, 0)
                                .addComponent(finaltotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(rtotal2txt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(finaltotaleror)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(4, 4, 4)
                        .addComponent(rpaymenttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rduetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout returnpanel1Layout = new javax.swing.GroupLayout(returnpanel1);
        returnpanel1.setLayout(returnpanel1Layout);
        returnpanel1Layout.setHorizontalGroup(
            returnpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(returnpanel1Layout.createSequentialGroup()
                .addGroup(returnpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 966, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        returnpanel1Layout.setVerticalGroup(
            returnpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(returnpanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout mainpanel2Layout = new javax.swing.GroupLayout(mainpanel2);
        mainpanel2.setLayout(mainpanel2Layout);
        mainpanel2Layout.setHorizontalGroup(
            mainpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1031, Short.MAX_VALUE)
            .addGroup(mainpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainpanel2Layout.createSequentialGroup()
                    .addComponent(returnpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 53, Short.MAX_VALUE)))
        );
        mainpanel2Layout.setVerticalGroup(
            mainpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
            .addGroup(mainpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainpanel2Layout.createSequentialGroup()
                    .addGap(0, 11, Short.MAX_VALUE)
                    .addComponent(returnpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(mainpanel2, "card3");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void rinvtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rinvtableMouseClicked
        this.rqtytxt.setText("");
        this.rpricetxt.setText("");
        this.rsubtotaltxt.setText("");
        if (this.rinvtable.getSelectedRow() != -1)
        {
          int s = this.rinvtable.getSelectedRow();
          this.rpricetxt.setText(this.rinvtable.getValueAt(s, 3).toString());
          this.rqtytxt.requestFocus();
        }
    }//GEN-LAST:event_rinvtableMouseClicked

    private void rqtytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rqtytxtActionPerformed
        double qty = 0.0D;
        double rqty = 0.0D;
        if (this.rsubtotaltxt.getText().isEmpty())
        {
          JOptionPane.showMessageDialog(this, "Please select a product first");
        }
        else
        {
          int s = this.rinvtable.getSelectedRow();
          qty = Double.parseDouble(this.rinvtable.getValueAt(s, 4).toString());
          rqty = Double.parseDouble(this.rinvtable.getValueAt(s, 6).toString());
          double avqty = qty - rqty;
          double returnqty = Double.parseDouble(this.rqtytxt.getText());
          if ((returnqty <= avqty) && (returnqty > 0.0D))
          {
            Vector v = new Vector();
            v.add(this.rinvtable.getValueAt(s, 0).toString());
            v.add(this.rinvtable.getValueAt(s, 1).toString());
            v.add(this.rinvtable.getValueAt(s, 2).toString());
            v.add(this.rinvtable.getValueAt(s, 3).toString());
            v.add(this.rqtytxt.getText());
            v.add(this.rsubtotaltxt.getText());
            v.add(this.invtxt.getText());
            v.add(this.rinvtable.getValueAt(s, 7).toString());
            this.dtm2.addRow(v);

            returntotalgen();
            clear(6);
          }
          else
          {
            JOptionPane.showMessageDialog(this, "Return qty greater than available");
          }
        }
    }//GEN-LAST:event_rqtytxtActionPerformed

    private void rqtytxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rqtytxtKeyReleased
        rsubtotaltxt.setText("");
        if(rpricetxt.getText().isEmpty()){

        }else if(rqtytxt.getText().isEmpty()){

        }else{
            rsubtotaltxt.setText(Double.parseDouble(rpricetxt.getText()) * Double.parseDouble(rqtytxt.getText()) + "");
        }
    }//GEN-LAST:event_rqtytxtKeyReleased

    private void invtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invtxtKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_invtxtKeyTyped

    private void invtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invtxtKeyReleased
        invoiceload();
    }//GEN-LAST:event_invtxtKeyReleased

    private void rtotaltxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtotaltxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rtotaltxtActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.mainpanel1.setVisible(true);
        this.mainpanel2.setVisible(false);
        cashrb.setSelected(true);
        setpanel();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (this.rinvtable2.getSelectedRow() == -1)
        {
          JOptionPane.showMessageDialog(this, "Please select a row to delete");
        }
        else
        {
          int s = this.rinvtable2.getSelectedRow();
          this.dtm2.removeRow(s);
          returntotalgen();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(finaltotaleror.isVisible()){
            JOptionPane.showMessageDialog(this, "Final Total cannot be minus.");
        }else if(rtotaltxt.getText().isEmpty()){

        }else if(rpaymenttxt.getText().isEmpty()){

        }else{
            double total = Double.parseDouble(finaltotaltxt.getText());
            double payment = Double.parseDouble(rpaymenttxt.getText());
            double due = Double.parseDouble(rduetxt.getText());

            if(payment >= total){
                saveinvoiceR();
            }else{
                JOptionPane.showMessageDialog(this, "Invalid Payment");
            }

        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void rpaymenttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpaymenttxtActionPerformed
        if(finaltotaleror.isVisible()){
            JOptionPane.showMessageDialog(this, "Final Total cannot be minus.");
        }else if(rtotaltxt.getText().isEmpty()){

        }else if(rpaymenttxt.getText().isEmpty()){

        }else{
            double total = Double.parseDouble(finaltotaltxt.getText());
            double payment = Double.parseDouble(rpaymenttxt.getText());
            double due = Double.parseDouble(rduetxt.getText());

            if(payment >= total){
                saveinvoiceR();
            }else{
                JOptionPane.showMessageDialog(this, "Invalid Payment");
            }

        }
    }//GEN-LAST:event_rpaymenttxtActionPerformed

    private void rpaymenttxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rpaymenttxtKeyReleased
        if(finaltotaltxt.getText().isEmpty()){

        }else if(rpaymenttxt.getText().isEmpty()){

        }else{
            double total = Double.parseDouble(finaltotaltxt.getText());
            double payment = Double.parseDouble(rpaymenttxt.getText());

            double due = payment - total;

            rduetxt.setText(due + "");

        }
    }//GEN-LAST:event_rpaymenttxtKeyReleased

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        new customer_reg(null, false , this).setVisible(true);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        removeselectrow();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void returnrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnrbActionPerformed
        setpanel();
    }//GEN-LAST:event_returnrbActionPerformed

    private void cashrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashrbActionPerformed
        setpanel();
    }//GEN-LAST:event_cashrbActionPerformed

    private void cashdueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashdueKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cashdueKeyTyped

    private void cashdueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashdueKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cashdueKeyReleased

    private void cashdueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashdueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cashdueActionPerformed

    private void cashpaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashpaymentKeyTyped
        char c = evt.getKeyChar();

        String key = String.valueOf(c);

        if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }

    }//GEN-LAST:event_cashpaymentKeyTyped

    private void cashpaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashpaymentKeyReleased
        if(totaltxt.getText().isEmpty()){

        }else if(cashpayment.getText().isEmpty()){
            double total = Double.parseDouble(totaltxt.getText());
            double payment = 0.0;
            double due = payment - total;
            cashdue.setText(due + "");
        }else{
            double total = Double.parseDouble(totaltxt.getText());
            double payment = Double.parseDouble(cashpayment.getText());

            double due = payment - total;

            cashdue.setText(formatter.format(due) + "");

        }
    }//GEN-LAST:event_cashpaymentKeyReleased

    private void cashpaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashpaymentActionPerformed
        saveinvoice();
    }//GEN-LAST:event_cashpaymentActionPerformed

    private void totaltxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totaltxtKeyTyped
        char c = evt.getKeyChar();

        String key = String.valueOf(c);

        if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }

        if(totaltxt.getText().contains(".") && key.equals(".")){
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_totaltxtKeyTyped

    private void totaltxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totaltxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_totaltxtKeyReleased

    private void totaltxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totaltxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totaltxtActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        saveinvoice();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addtolist();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void stockcomboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stockcomboItemStateChanged
        if(stockcombo.getItemCount() == 0){

        }else{
            loadprices();
        }
    }//GEN-LAST:event_stockcomboItemStateChanged

    private void pricetxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricetxtKeyTyped
        char c = evt.getKeyChar();

        String key = String.valueOf(c);

        if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }

        if(pricetxt.getText().contains(".") && key.equals(".")){
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_pricetxtKeyTyped

    private void pricetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricetxtKeyReleased
        subtotalgen();
    }//GEN-LAST:event_pricetxtKeyReleased

    private void pricetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricetxtActionPerformed
        if(pricetxt.getText().isEmpty()){

        }else{
            qtytxt.requestFocus();
        }
    }//GEN-LAST:event_pricetxtActionPerformed

    private void qtytxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtytxtKeyTyped
        char c = evt.getKeyChar();

        String key = String.valueOf(c);

        if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }

        if(pricetxt.getText().contains(".") && key.equals(".")){
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_qtytxtKeyTyped

    private void qtytxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtytxtKeyReleased
        subtotalgen();
    }//GEN-LAST:event_qtytxtKeyReleased

    private void qtytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtytxtActionPerformed
        if(qtytxt.getText().isEmpty()){

        }else{
            addtolist();
        }
    }//GEN-LAST:event_qtytxtActionPerformed

    private void pidtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidtxtKeyTyped
        
        char c = evt.getKeyChar();
        String key = String.valueOf(c);
        
        if(pidtxt.getText().length() == 0 && key.equals(" ") ){
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }
        
        
                
                

    }//GEN-LAST:event_pidtxtKeyTyped

    private void pidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidtxtKeyReleased
        
        if (this.pidtxt.getText().isEmpty()) {
          this.numberlist1.setVisible(false);
          this.numberlist2.setVisible(false);
          clear(2);
        } 

        if (this.numberlist1.isVisible() && evt.getKeyCode() == 40){
          if (this.numberlist1.getModel().getSize() != 0) {
            this.numberlist1.requestFocus();
            this.numberlist1.setSelectedIndex(0);
          } 
        }

    }//GEN-LAST:event_pidtxtKeyReleased

    private void pidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidtxtActionPerformed
        
        String pid = this.pidtxt.getText();    
        if (this.pidtxt.getText().isEmpty()) {
          this.numberlist1.setVisible(false);
          this.numberlist2.setVisible(false);
          clear(2);
        }
        else {
          searchitem();
          if (pid.length() != 12) {
            searchproduct();
          } else if (pid.matches(".*[a-z].*")) {
            searchproduct();
          } else {
            searchproduct2();
          } 
        }
        
    }//GEN-LAST:event_pidtxtActionPerformed

    private void numberlist1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_numberlist1ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_numberlist1ValueChanged

    private void numberlist1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberlist1KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String cnum = numberlist1.getSelectedValue().toString();
            String arr[] = cnum.split(" - ", 2);
            pidtxt.setText(arr[0]);
            loadproduct();
            numberlist2.setVisible(false);
            numberlist1.setVisible(false);
        }
    }//GEN-LAST:event_numberlist1KeyReleased

    private void numberlist1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_numberlist1MouseClicked
        String cnum = numberlist1.getSelectedValue().toString();
        String arr[] = cnum.split(" - ", 2);
        pidtxt.setText(arr[0]);
        loadproduct();
        numberlist2.setVisible(false);
        numberlist1.setVisible(false);
    }//GEN-LAST:event_numberlist1MouseClicked

    private void cidtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cidtxtKeyTyped
        char c = evt.getKeyChar();

        String key = String.valueOf(c);

        if  (!(Character.isDigit(c) || key.equals("/") || key.equals(" ") || key.equals("(") || key.equals(")") || key.equals("-") || key.equals("+") || key.equals("/")|| key.equals(",")|| key.equals(".") || key.equals(".") || Character.isAlphabetic(c))) {
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }

        if(cidtxt.getText().length() == 0 && key.equals(" ") ){
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_cidtxtKeyTyped

    private void cidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cidtxtKeyReleased

    }//GEN-LAST:event_cidtxtKeyReleased

    private void cidtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cidtxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidtxtKeyPressed

    private void cidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidtxtActionPerformed
        /*if(cpidtxt.getText().isEmpty()){
            new quicksrh(null, true ).setVisible(true);
        }else if(cpnametxt.getText().isEmpty()){

        }else{
            cbuytxt.requestFocus();
        }*/

    }//GEN-LAST:event_cidtxtActionPerformed

    private void pidtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidtxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
             cashpayment.requestFocus();
        }
    }//GEN-LAST:event_pidtxtKeyPressed

    private void cashpaymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashpaymentKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
             pidtxt.requestFocus();
        }
    }//GEN-LAST:event_cashpaymentKeyPressed

    private void pricetxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricetxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
             qtytxt.requestFocus();
        }
    }//GEN-LAST:event_pricetxtKeyPressed

    private void qtytxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtytxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
             pricetxt.requestFocus();
        }
    }//GEN-LAST:event_qtytxtKeyPressed

    private void numberlist1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberlist1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
             pidtxt.requestFocus();
        }
    }//GEN-LAST:event_numberlist1KeyPressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        
        int c = jTable1.getSelectedColumn();
        int r = jTable1.getSelectedRow();
        
        if(jTable1.getSelectedColumn() == 4){
            double total = Double.parseDouble(jTable1.getValueAt(r,3).toString()) * Double.parseDouble(jTable1.getValueAt(r,4).toString());
            jTable1.setValueAt(total, r,5);
        }else{
            System.out.println("no edit");
        }
        
        
    }//GEN-LAST:event_jTable1KeyReleased

    private void distxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_distxtActionPerformed

    private void distxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_distxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_distxtKeyPressed

    private void distxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_distxtKeyReleased
        gendis();
    }//GEN-LAST:event_distxtKeyReleased

    private void distxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_distxtKeyTyped
        char c = evt.getKeyChar();    
        String key = String.valueOf(c);
        if ((!Character.isDigit(c)) && (!key.equals("."))) {
          evt.consume();
        }
        if ((this.distxt.getText().contains(".")) && (key.equals("."))) {
          evt.consume();
        }
    }//GEN-LAST:event_distxtKeyTyped

    private void creditcardrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditcardrbActionPerformed
        setpanel();
    }//GEN-LAST:event_creditcardrbActionPerformed

    private void freeissuetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freeissuetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_freeissuetxtActionPerformed

    private void freeissuetxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_freeissuetxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_freeissuetxtKeyPressed

    private void freeissuetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_freeissuetxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_freeissuetxtKeyReleased

    private void freeissuetxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_freeissuetxtKeyTyped
        char c = evt.getKeyChar();
        String key = String.valueOf(c);
        if (!Character.isDigit(c) && !key.equals(".")) {
          evt.consume();
        }
        if (this.freeissuetxt.getText().contains(".") && key.equals(".")) {
          evt.consume();
        }
    }//GEN-LAST:event_freeissuetxtKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                invoice dialog = new invoice(new javax.swing.JFrame(), true , "admin" );
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        /*Display dd = new Display();
                        dd.PrintFirstLine("** SUGANDIKA SUPER **");
                        dd.PrintSecondLine("NEXT CUSTOMER PLEASE");
                        System.exit(0);*/
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField cashdue;
    private javax.swing.JTextField cashpayment;
    private javax.swing.JRadioButton cashrb;
    private javax.swing.JLabel cididtxt;
    private javax.swing.JTextField cidtxt;
    private javax.swing.JLabel cinfotxt;
    private javax.swing.JRadioButton creditcardrb;
    private javax.swing.JTextField distxt;
    private javax.swing.JLabel finaltotaleror;
    private javax.swing.JLabel finaltotaltxt;
    private javax.swing.JTextField freeissuetxt;
    private javax.swing.JTextField invtotaltxt;
    private javax.swing.JTextField invtxt;
    private javax.swing.JLabel itemcounttxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel mainpanel1;
    private javax.swing.JPanel mainpanel2;
    private javax.swing.JLabel maxlbl;
    private javax.swing.JLabel minlbl;
    private javax.swing.JLabel nextbillnotxt;
    private javax.swing.JList numberlist1;
    private javax.swing.JScrollPane numberlist2;
    private javax.swing.JTextField pidtxt;
    private javax.swing.JLabel pnametxt;
    private javax.swing.JTextField pricetxt;
    private javax.swing.JTextField qtytxt;
    private javax.swing.JRadioButton radio1;
    private javax.swing.JRadioButton radio2;
    private javax.swing.JTextField rduetxt;
    private javax.swing.JPanel returnpanel1;
    private javax.swing.JRadioButton returnrb;
    private javax.swing.JTable rinvtable;
    private javax.swing.JTable rinvtable2;
    private javax.swing.JTextField rpaymenttxt;
    private javax.swing.JTextField rpricetxt;
    private javax.swing.JTextField rqtytxt;
    private javax.swing.JTextField rsubtotaltxt;
    private javax.swing.JTextField rtotal2txt;
    private javax.swing.JTextField rtotaltxt;
    private javax.swing.JComboBox stockcombo;
    private javax.swing.JLabel stocklbl;
    private javax.swing.JLabel subtotaltxt;
    private javax.swing.JTextField totaltxt;
    private javax.swing.JLabel wlbl;
    // End of variables declaration//GEN-END:variables

    private void gendis()
  {
    String dis = this.distxt.getText();
    String max = this.maxlbl.getText();
    String min = this.minlbl.getText();
    if (dis.isEmpty())
    {
      this.pricetxt.setText(max + "");
    }
    else if (!max.isEmpty())
    {
      double d = Double.parseDouble(this.distxt.getText());
      double m = Double.parseDouble(this.maxlbl.getText());
      double price = 0.0D;
      if (m == 0.0D)
      {
        price = 0.0D;
        this.pricetxt.setText(m + "");
      }
      else if (d == 0.0D)
      {
        price = m;
        this.pricetxt.setText(m + "");
      }
      else if (d >= 100.0D)
      {
        price = m;
        this.distxt.setText("0");
      }
      else
      {
        price = m / (100.0D + d) * 100.0D;
      }
      DecimalFormat df = new DecimalFormat("###.##");
      this.pricetxt.setText(df.format(price) + "");
    }
  }
  
  private void setcustomerinfo()
  {
    try
    {
      String cnum = this.cidtxt.getText().toString();
      String[] arr = cnum.split(" - ", 2);
      String firstWord = arr[0];
      System.out.println(firstWord);
      ResultSet rs = this.d.srh("select * from customer where id = '" + firstWord + "'");
      while (rs.next())
      {
        this.cidtxt.setText(firstWord);
        this.cinfotxt.setText("<html><p> " + rs.getString("name") + " <br> " + rs.getString("tel") + " </p></html>");
      }
      this.pidtxt.requestFocus();
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
  }
  
  private void searchproduct()
  {
    clear(2);
    try
    {
      int a = 0;
      
      ResultSet rs2 = this.d.srh("select * from product where id = '" + this.pidtxt.getText() + "' ");
      for (int i = 0; rs2.next(); i++)
      {
        this.jlm1.add(i, rs2.getString("id") + " - " + rs2.getString("name"));
        a = 1;
      }
      if (a == 1)
      {
        this.numberlist1.setVisible(false);
        this.numberlist2.setVisible(false);
        this.jlm1.removeAllElements();
        loadproduct();
      }
      else
      {
        this.numberlist1.setVisible(true);
        this.numberlist2.setVisible(true);
        this.jlm1.removeAllElements();
        ResultSet rs = this.d.srh("select *  from product where id LIKE '%" + this.pidtxt.getText() + "%' OR name LIKE '%" + this.pidtxt.getText() + "%' ");
        for (int i = 0; rs.next(); i++) {
          this.jlm1.add(i, rs.getString("id") + " - " + rs.getString("name"));
        }
        this.numberlist1.setModel(this.jlm1);
        if (this.numberlist1.getModel().getSize() == 0)
        {
          this.numberlist1.setVisible(false);
          this.numberlist2.setVisible(false);
        }
      }
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
  }
  
  private void searchproduct2()
  {
    String id = this.pidtxt.getText();
    clear(2);
    
    int pid = Integer.parseInt(id.substring(0, 7));
    double qty = Double.parseDouble(id.substring(7, 12)) / 1000.0D;
    
    System.out.println(pid);
    if ((pid > 0) && (pid <= 100)) {
      try
      {
        ResultSet rs = this.d.srh("select * from product where id = '" + pid + "' ");
        while (rs.next())
        {
          this.pnametxt.setText("<html><p>" + rs.getString("name") + "</p></html>");
          
          int i = 0;
          ResultSet rs1 = this.d.srh("select * from stock where product_id = '" + pid + "' and avqty > 0 ");
          while (rs1.next())
          {
            this.stockcombo.addItem(rs1.getString("id"));
            i = 1;
          }
          if (i == 1)
          {
            ResultSet rs3 = this.d.srh("select * from stock where id = '" + this.stockcombo.getSelectedItem().toString() + "' ");
            while (rs3.next())
            {
              this.pidtxt.setText(pid + "");
              this.pricetxt.setText(rs3.getString("defprice"));
              this.stocklbl.setText(rs3.getString("avqty"));
              this.qtytxt.setText(qty + "");
              this.qtytxt.setSelectionStart(0);
              this.qtytxt.setSelectionEnd(5);
              this.pricetxt.setSelectionStart(0);
              this.pricetxt.setSelectionEnd(5);
              this.minlbl.setText(rs3.getString("minprice"));
              this.maxlbl.setText(rs3.getString("maxprice"));
              this.wlbl.setText(rs3.getString("defprice"));
              subtotalgen();
              this.pricetxt.requestFocus();
            }
          }
          else
          {
            JOptionPane.showMessageDialog(this, "No Stock Available for Selected Product");
            this.pidtxt.requestFocus();
          }
        }
      }
      catch (Exception e)
      {
        e.printStackTrace();
      }
    } else {
      searchproduct();
    }
  }
  
  private void loadproduct()
  {
    try
    {
      ResultSet rs = this.d.srh("select * from product where id = '" + this.pidtxt.getText() + "' ");
      while (rs.next())
      {
        this.pnametxt.setText("<html><p>" + rs.getString("name") + "</p></html>");
        
//        display.PrintFirstLine(rs.getString("name").toUpperCase());
//        display.PrintSecondLine("");
        
        loadstock();
      }
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
  }
  
  private void clear(int i)
  {
    if (i == 1)
    {
      this.pnametxt.setText("");
    }
    else if (i == 2)
    {
      this.pnametxt.setText("");
      this.pricetxt.setText("");
      this.distxt.setText("");
      this.qtytxt.setText("");
      this.subtotaltxt.setText("");
      freeissuetxt.setText("");
      this.stocklbl.setText("");
      this.minlbl.setText("");
      this.maxlbl.setText("");
      this.wlbl.setText("");
      this.stockcombo.removeAllItems();
      this.dlm1.removeAllElements();
      this.pidtxt.requestFocus();
    }
    else if (i == 3)
    {
      this.pidtxt.setText("");
      this.pnametxt.setText("");
      this.pricetxt.setText("");
      this.distxt.setText("");
      this.qtytxt.setText("");
      this.subtotaltxt.setText("");
      freeissuetxt.setText("");
      this.stocklbl.setText("");
      this.minlbl.setText("");
      this.maxlbl.setText("");
      this.wlbl.setText("");
      this.stockcombo.removeAllItems();
      this.dlm1.removeAllElements();
      this.numberlist1.setVisible(false);
      this.numberlist2.setVisible(false);
      this.totaltxt.setText("0.00");
      this.invtotaltxt.setText("0.00");
      this.rtotaltxt.setText("0.00");
      setfinaltotal();
      this.pidtxt.requestFocus();
    }
    else if (i == 4)
    {
      this.cidtxt.setText("0");
      this.cinfotxt.setText("Cash Sale ");
    }
    else if (i == 5)
    {
      this.dtm.setRowCount(0);
      this.dtm1.setRowCount(0);
      this.dtm2.setRowCount(0);
      this.totaltxt.setText("");
      this.invtotaltxt.setText("0.00");
      freeissuetxt.setText("");
      this.rtotaltxt.setText("0.00");
      this.rtotal2txt.setText("0.00");
      this.rqtytxt.setText("");
      this.rpricetxt.setText("");
      this.rsubtotaltxt.setText("");
      
      this.cashpayment.setText("");
      this.cashdue.setText("");
      
      this.rpaymenttxt.setText("");
      this.rduetxt.setText("");
      this.finaltotaltxt.setText("");
      
      this.finaltotaleror.setVisible(false);
      
      try {
        int nestinvid = this.d.nextnum("select max(id) from invoice_reg", "max(id)");
        this.nextbillnotxt.setText(nestinvid + "");
      } catch (Exception e) {
        e.printStackTrace();
      } 
      
      itemcounttxt.setText(this.dtm.getRowCount() + "");
      
      this.cashrb.setSelected(true);
      setpanel();
    }
    else if (i == 6)
    {
      this.rqtytxt.setText("");
      this.rpricetxt.setText("");
      this.rsubtotaltxt.setText("");
      freeissuetxt.setText("");
    }
  }
  
  private void loadstock()
  {
    this.stockcombo.removeAllItems();
    try
    {
      int i = 0;
      ResultSet rs = this.d.srh("select * from stock where product_id = '" + this.pidtxt.getText() + "' and avqty > 0 ");
      while (rs.next())
      {
        this.stockcombo.addItem(rs.getString("id"));
        i = 1;
      }
      if (i == 1)
      {
        loadprices();
      }
      else
      {
        JOptionPane.showMessageDialog(this, "No Stock");
        this.pidtxt.requestFocus();
      }
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
  }
  
  private void loadprices()
  {
    try
    {
      ResultSet rs = this.d.srh("select * from stock where id = '" + this.stockcombo.getSelectedItem().toString() + "' ");
      while (rs.next())
      {
        
        if(radio1.isSelected()){
            this.pricetxt.setText(rs.getString("minprice"));
        }else if(radio2.isSelected()){
            this.pricetxt.setText(rs.getString("defprice"));
        }
        
        this.stocklbl.setText(rs.getString("avqty"));
        this.qtytxt.setText("1");
        this.qtytxt.setSelectionStart(0);
        this.qtytxt.setSelectionEnd(5);
        this.pricetxt.setSelectionStart(0);
        this.pricetxt.setSelectionEnd(5);
        this.minlbl.setText(rs.getString("minprice"));
        this.maxlbl.setText(rs.getString("maxprice"));
        this.wlbl.setText(rs.getString("defprice"));
        subtotalgen();
        this.qtytxt.requestFocus();
      }
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
  }
  
  private void subtotalgen()
  {
    if (this.pricetxt.getText().isEmpty())
    {
      this.subtotaltxt.setText("Rs. 0.00");
    }
    else if (this.qtytxt.getText().isEmpty())
    {
      this.subtotaltxt.setText("Rs. 0.00");
    }
    else
    {
      double price = Double.parseDouble(this.pricetxt.getText());
      double qty = Double.parseDouble(this.qtytxt.getText());
      this.subtotaltxt.setText("Rs. " + price * qty);
    }
  } 
  
  
  private void searchitem() {
    String pid = this.pidtxt.getText();
    
    if (this.pidtxt.getText().isEmpty()) {
      this.numberlist1.setVisible(false);
      this.numberlist2.setVisible(false);
      clear(2);
    } else {

      
      try {
        this.numberlist1.setVisible(true);
        this.numberlist2.setVisible(true);
        this.jlm1.removeAllElements();

        
        ResultSet rs = this.d.srh(" SELECT id , name from product where id LIKE '%" + this.pidtxt.getText() + "%' OR name LIKE '%" + this.pidtxt.getText() + "%'  ");
        
        for (int i = 0; rs.next(); i++) {
          this.jlm1.add(i, rs.getString("id") + " - " + rs.getString("name"));
        }
        this.numberlist1.setModel(this.jlm1);
        if (this.numberlist1.getModel().getSize() == 0) {
          
          this.numberlist1.setVisible(false);
          this.numberlist2.setVisible(false);
        } 
      } catch (Exception e) {
        e.printStackTrace();
      } 
    } 
  }




  
  private void addtolist()
  {
    if (this.pnametxt.getText().isEmpty())
    {
      this.pidtxt.requestFocus();
    }
    else if (this.stockcombo.getItemCount() == 0)
    {
      JOptionPane.showMessageDialog(this, "No Stock");
      this.pidtxt.requestFocus();
    }
    else if (this.pricetxt.getText().isEmpty())
    {
      this.pricetxt.requestFocus();
    }
    else if (this.qtytxt.getText().isEmpty())
    {
      this.qtytxt.requestFocus();
    }
    else
    {
        
        
      //PRICE CHECK DISABLED
      
      double price = Double.parseDouble(this.pricetxt.getText());
      double qty = Double.parseDouble(this.qtytxt.getText());
      double min = Double.parseDouble(this.minlbl.getText());
      double max = Double.parseDouble(this.maxlbl.getText());
      double avqty = Double.parseDouble(this.stocklbl.getText());
      
      if ((price < min) || (price > max) || (price <= 0.0D))
      {
        JOptionPane.showMessageDialog(this, "Invalid Price");
        this.pricetxt.requestFocus();
      }
      else if ((qty > avqty) || (qty <= 0.0D))
      {
        JOptionPane.showMessageDialog(this, "Invalid Qty");
        this.qtytxt.requestFocus();
      }
      else
      {
        listing(1);
      }
    
        
      //PRICE CHECK DISSABLED AND ACTIVE ANY SALE
      //listing(1);
      
      
    }
    totalgen();
  }
  
  private void listing(int i)
  {
    if (i == 1)
    {
      Vector v = new Vector();
      v.add(this.stockcombo.getSelectedItem().toString());
      v.add(this.pidtxt.getText());
      v.add(this.pnametxt.getText());
      v.add(this.pricetxt.getText());
      v.add(this.qtytxt.getText());
      v.add(Double.valueOf(Double.parseDouble(this.pricetxt.getText()) * Double.parseDouble(this.qtytxt.getText())));
      v.add(this.distxt.getText());
      v.add(this.freeissuetxt.getText());
      this.dtm.addRow(v);
      this.jTable1.setRowSelectionInterval(this.dtm.getRowCount() - 1, this.dtm.getRowCount() - 1);
      
      itemcounttxt.setText(this.dtm.getRowCount() + "");
      
      //display.PrintFirstLine(pnametxt.getText());
//      display.PrintSecondLine(pricetxt.getText() + "  x  " + qtytxt.getText() + " = " + formatter.format(Double.parseDouble(this.pricetxt.getText()) * Double.parseDouble(this.qtytxt.getText())));
//      
      //Toolkit.getDefaultToolkit().beep();
    }
    clear(3);
  }
  
  private void totalgen()
  {
    if (this.dtm.getRowCount() != 0)
    {
      Double total = Double.valueOf(0.0D);
      for (int i = 0; i < this.dtm.getRowCount(); i++) {
        total = Double.valueOf(total.doubleValue() + Double.parseDouble(this.dtm.getValueAt(i, 5).toString()));
      }
      this.totaltxt.setText(formatter.format(total) + "");
      this.invtotaltxt.setText(formatter.format(total) + "");
      
      this.cashpayment.setText("");
      this.cashdue.setText("");
      
      new java.util.Timer().schedule( 
        new java.util.TimerTask() {
            @Override
            public void run() {
//                display.PrintFirstLine("BILL TOTAL : ");
//                display.PrintSecondLine(formatter.format(Double.parseDouble(totaltxt.getText())) + "");
            }
        }, 
        3000 
      );
      
      setfinaltotal();
    }
    else
    {
      this.totaltxt.setText("0.0");
      this.cashpayment.setText("");
      this.cashdue.setText("");
    }
  }
  
  private void setfinaltotal()
  {
    double total = Double.parseDouble(this.invtotaltxt.getText());
    double returntotal = Double.parseDouble(this.rtotaltxt.getText());
    
    this.finaltotaltxt.setText(total - returntotal + "");
    this.rpaymenttxt.setText("");
    this.rduetxt.setText("");
    if (Double.parseDouble(this.finaltotaltxt.getText()) < 0.0D) {
      this.finaltotaleror.setVisible(true);
    } else {
      this.finaltotaleror.setVisible(false);
    }
  }
 
  
  private void saveinvoice() {
    this.pidtxt.requestFocus();
    if (this.cinfotxt.getText().isEmpty()) {
      
      JOptionPane.showMessageDialog(this, "Please enter a customer first");
      this.cidtxt.requestFocus();
    }
    else if (this.dtm.getRowCount() == 0) {
      
      JOptionPane.showMessageDialog(this, "Please insert product first");
      this.pidtxt.requestFocus();
    }
    else if (this.totaltxt.getText().isEmpty()) {
      
      JOptionPane.showMessageDialog(this, "Enter Products");
      totalgen();
    }
    else if (this.cashdue.getText().isEmpty() && cashrb.isSelected()) {
      
      JOptionPane.showMessageDialog(this, "Insert Payment");
      this.cashpayment.requestFocus();
    }
    else if (Double.parseDouble(this.cashdue.getText()) < 0.0D && cashrb.isSelected()) {
      
      JOptionPane.showMessageDialog(this, "Invalid Payment");
      totalgen();
    
    }
    else {
      
      double freeissue = 0.0D;

      
      try {
        int invid = this.d.nextnum("select max(id) from invoice_reg", "max(id)");
        String cid = "0";
        if (!this.cinfotxt.getText().isEmpty()){
            
          cid = this.cidtxt.getText();
          
          if(cashrb.isSelected()){
              this.d.aud("insert into invoice_reg(id, date, total, discount, grandtotal, user_usename, customer_id, extra, active ,payment , due , ptype  ) Values( '" + invid + "' , NOW() , '" + this.totaltxt
              .getText() + "' , '0.0' , '" + this.totaltxt.getText() + "' , '" + this.user + "' , '" + cid + "' , '' , '1' , '" + this.cashpayment.getText() + "' , '" + this.cashdue.getText() + "' , 1 ) ");
          
          }else{
              this.d.aud("insert into invoice_reg(id, date, total, discount, grandtotal, user_usename, customer_id, extra, active ,payment , due , ptype ) Values( '" + invid + "' , NOW() , '" + this.totaltxt
              .getText() + "' , '0.0' , '" + this.totaltxt.getText() + "' , '" + this.user + "' , '" + cid + "' , '' , '1' , '" + this.totaltxt.getText() + "' , '0.00' , 2 ) ");
          
          }
          
          
          int j = this.d.audr("insert into customer_payment (customer_id, date, payment, payment_type, extra, user_usename, previous, due , t) values('" + this.cidtxt.getText() + "' , NOW() , '" + this.totaltxt.getText() + "'  , 'Cash' , ' ' , '" + this.user + "' , '0' , '0' , '1' ) ");
          for (int i = 0; i < this.dtm.getRowCount(); i++) {
            
            double buy = 0.0D;
            ResultSet rs = this.d.srh("select buyprice from stock where id = '" + this.dtm.getValueAt(i, 0) + "' ");
            while (rs.next()) {
              buy = rs.getDouble("buyprice");
            }
            double totalprofit = (Double.parseDouble(this.dtm.getValueAt(i, 3).toString()) - buy) * Double.parseDouble(this.dtm.getValueAt(i, 4).toString());
            
            String disc = this.dtm.getValueAt(i, 6).toString();
            if (!disc.isEmpty()) {
              disc = disc + "%";
            }
            
            String fi = this.dtm.getValueAt(i, 7).toString();
            if (fi.isEmpty()) {
              fi = "0";
            } else {
              freeissue = 1.0D;
            } 
            
            this.d.aud("insert into invoice(invoice_reg_id, stock_id, stock_product_id, price, qty, subtotal, cost, totalprofit, rqty , disc , fi) VALUES('" + invid + "' , '" + this.dtm
                .getValueAt(i, 0) + "' , '" + this.dtm.getValueAt(i, 1) + "' , '" + this.dtm.getValueAt(i, 3) + "' , '" + this.dtm.getValueAt(i, 4) + "' , '" + this.dtm.getValueAt(i, 5) + "' , '" + buy + "' , '" + totalprofit + "' , '0' , '" + disc + "' , '" + fi + "'  )");
          
            d.aud("update stock set avqty = avqty - "+dtm.getValueAt(i, 4)+" where id = '"+dtm.getValueAt(i, 0)+"' ");
            
          } 
          JOptionPane.showMessageDialog(this, "Saved Successfully");
          cashrb.setSelected(true);
          
          if (freeissue > 0.0D) {
            ViewReportF(invid);
          } else {
            ViewReport(invid);
          } 
          
          clear(5); clear(3); clear(4);
          
          this.pidtxt.requestFocus();
        
        }
      
      }
      catch (Exception e) {
        
        e.printStackTrace();
      } 
    } 
  }

  
  private void saveinvoiceR() {
    if (this.cinfotxt.getText().isEmpty()) {
      
      JOptionPane.showMessageDialog(this, "Please enter a customer first");
      this.cidtxt.requestFocus();
    }
    else if (this.dtm.getRowCount() == 0) {
      
      JOptionPane.showMessageDialog(this, "Please insert product first");
      this.pidtxt.requestFocus();
    }
    else if (this.totaltxt.getText().isEmpty()) {
      
      JOptionPane.showMessageDialog(this, "Enter Products");
      totalgen();
    }
    else if (this.rinvtable2.getRowCount() == 0) {
      
      JOptionPane.showMessageDialog(this, "Please enter products to return");
    }
    else if (this.finaltotaleror.isVisible()) {
      
      JOptionPane.showMessageDialog(this, "Invoice products must be grater than return");
    } else {

      
      try {
        
        int invid = this.d.nextnum("select max(id) from invoice_reg", "max(id)");
        String cid = "0";
        if (!this.cinfotxt.getText().isEmpty())
        {
          cid = this.cidtxt.getText();
          
          this.d.aud("insert into invoice_reg(id, date, total, discount, grandtotal, user_usename, customer_id, extra, active , payment , due ,rtotal ) Values( '" + invid + "' , NOW() , '" + this.totaltxt
              .getText() + "' , '0.0' , '" + this.totaltxt.getText() + "' , '" + this.user + "' , '" + cid + "' , '' , '1' , '" + this.rpaymenttxt.getText() + "' , '" + this.rduetxt.getText() + "' , '" + this.rtotal2txt.getText() + "' ) ");
          
          int j = this.d.audr("insert into customer_payment (customer_id, date, payment, payment_type, extra, user_usename, previous, due , t) values('" + this.cidtxt.getText() + "' , NOW() , '" + this.finaltotaltxt.getText() + "'  , 'Cash' , ' ' , '" + this.user + "' , '0' , '0' , '1' ) ");
          for (int i = 0; i < this.dtm.getRowCount(); i++) {
            
            double buy = 0.0D;
            ResultSet rs = this.d.srh("select buyprice from stock where id = '" + this.dtm.getValueAt(i, 0) + "' ");
            while (rs.next()) {
              buy = rs.getDouble("buyprice");
            }
            double totalprofit = (Double.parseDouble(this.dtm.getValueAt(i, 3).toString()) - buy) * Double.parseDouble(this.dtm.getValueAt(i, 4).toString());
            
            String disc = this.dtm.getValueAt(i, 6).toString();
            if (!disc.isEmpty()) {
              disc = disc + "%";
            }
            
            String fi = this.dtm.getValueAt(i, 7).toString();
            if (fi.isEmpty()) {
              fi = "0";
            }
            
            this.d.aud("insert into invoice(invoice_reg_id, stock_id, stock_product_id, price, qty, subtotal, cost, totalprofit, rqty , disc , fi) VALUES('" + invid + "' , '" + this.dtm
                .getValueAt(i, 0) + "' , '" + this.dtm.getValueAt(i, 1) + "' , '" + this.dtm.getValueAt(i, 3) + "' , '" + this.dtm.getValueAt(i, 4) + "' , '" + this.dtm.getValueAt(i, 5) + "' , '" + buy + "' , '" + totalprofit + "' , '0' , '" + disc + "' , '" + fi + "' )");
          
            d.aud("update stock set avqty = avqty - "+dtm.getValueAt(i, 4)+" where id = '"+dtm.getValueAt(i, 0)+"' ");
          
          } 
          
          for (int i = 0; i < this.dtm2.getRowCount(); i++) {
            
            this.d.aud("insert into invoice_return(invoice_saleid, invoice_invoice_reg_id, invoice_stock_id, invoice_stock_product_id, qty, price, total, rdate, rid, cus) VALUES('" + this.dtm2
                .getValueAt(i, 7) + "' , '" + this.dtm2.getValueAt(i, 6) + "' , '" + this.dtm2.getValueAt(i, 1) + "' , '" + this.dtm2.getValueAt(i, 0) + "' , '" + this.dtm2.getValueAt(i, 4) + "' , '" + this.dtm2.getValueAt(i, 3) + "' , '" + this.dtm2.getValueAt(i, 5) + "' , NOW() , '" + invid + "' , '" + cid + "'  )");
            
            d.aud("updatadmin   e stock set avqty = avqty + "+dtm2.getValueAt(i, 4)+" where id = '"+dtm2.getValueAt(i, 1)+"' ");
            
            this.d.aud("update invoice set rqty = rqty + '" + this.dtm2.getValueAt(i, 4).toString() + "' where saleid = '" + this.dtm2.getValueAt(i, 7).toString() + "'");
          } 


          
          JOptionPane.showMessageDialog(this, "Saved Successfully");
          ViewReportR(invid);
          clear(5); clear(3); clear(4);
          
          this.cashrb.setSelected(true);
          this.mainpanel1.setVisible(true);
          this.mainpanel2.setVisible(false);
          
          this.pidtxt.requestFocus();
        }
      
      } catch (Exception e) {
        
        e.printStackTrace();
      } 
    } 
  }


  
  public void ViewReport(int i) {
    try {
      JasperReport jr = (JasperReport)JRLoader.loadObject(new File("E:\\My Projects\\Java Projects\\POS 2.2 SUPERMARKET\\src\\Report\\invoiceprint.jasper"));
      
      Map m = new HashMap();
      
      m.put("ID", Integer.valueOf(i));
      
      JasperPrint jp = JasperFillManager.fillReport(jr, m, this.d.getConnection());
      
      JasperPrintManager.printReport(jp, true);
    }
    catch (Exception e) {
      
      JOptionPane.showMessageDialog(this, e);
    } 
  }



  
  public void ViewReportF(int i) {
    try {
      JasperReport jr = (JasperReport)JRLoader.loadObject(new File("E:\\My Projects\\Java Projects\\POS 2.2 SUPERMARKET\\src\\Report\\invoiceprint.jasper"));
      
      Map m = new HashMap();
      
      m.put("ID", Integer.valueOf(i));
      
      JasperPrint jp = JasperFillManager.fillReport(jr, m, this.d.getConnection());
      
      JasperPrintManager.printReport(jp, true);
    }
    catch (Exception e) {
      
      JOptionPane.showMessageDialog(this, e);
    } 
  }



  
  public void ViewReportR(int i) {
    try {
      JasperReport jr = (JasperReport)JRLoader.loadObject(new File("E:\\My Projects\\Java Projects\\POS 2.2 SUPERMARKET\\src\\Report\\invoiceprint.jasper"));
      
      Map m = new HashMap();
      
      m.put("ID", Integer.valueOf(i));
      
      JasperPrint jp = JasperFillManager.fillReport(jr, m, this.d.getConnection());

      
      JasperPrintManager.printReport(jp, true);
    }
    catch (Exception e) {
      
      JOptionPane.showMessageDialog(this, e);
    } 
  }

  
  
  
  
  public void customerset(String id)
  {
    this.cidtxt.setText(id);
    try
    {
      ResultSet rs = this.d.srh("select * from customer where id = '" + id + "'");
      while (rs.next())
      {
        this.cididtxt.setText(id);
        this.cinfotxt.setText("<html><p> " + rs.getString("name") + " <br> " + rs.getString("tel") + " </p></html>");
      }
      this.pidtxt.requestFocus();
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
  }
  
  private void setpanel()
  {
    if (this.creditcardrb.isSelected())
    {
        cashpayment.setText(totaltxt.getText());
        if(totaltxt.getText().isEmpty()){

        }else if(cashpayment.getText().isEmpty()){
            double total = Double.parseDouble(totaltxt.getText());
            double payment = 0.0;
            double due = payment - total;
            cashdue.setText(due + "");
        }else{
            double total = Double.parseDouble(totaltxt.getText());
            double payment = Double.parseDouble(cashpayment.getText());

            double due = payment - total;

            cashdue.setText(formatter.format(due) + "");

        }
    }
    
    if (this.cashrb.isSelected())
    {

    }
    else if (this.returnrb.isSelected())
    {
      //this.changepanel.setVisible(false);
      this.mainpanel1.setVisible(false);
      this.mainpanel2.setVisible(true);
    }
    
  }
  
  /*
  private void savecreditinvoice(){
     
    if (this.totaltxt.getText().isEmpty())
    {
      JOptionPane.showMessageDialog(this, "Enter Products");
      totalgen();
    }
    else if (cardnotxt.getText().isEmpty())
    {
      JOptionPane.showMessageDialog(this, "Invalid Card No");
    }
    else if (cardbanktxt.getText().isEmpty())
    {
      JOptionPane.showMessageDialog(this, "Invalid Bank");
    }
    else
    {
      double total = Double.parseDouble(this.totaltxt2.getText());
      String cardno = cardnotxt.getText();
      String cardbank = cardbanktxt.getText();
      
      //geninvoicecredit();
    }
  }
*/   
  
  private void invoiceload()
  {
    try
    {
      this.dtm1.setRowCount(0);
      ResultSet rs = this.d.srh("select * from invoice inner join product on invoice.stock_product_id = product.id where invoice_reg_id = '" + this.invtxt.getText() + "' ");
      while (rs.next())
      {
        Vector v = new Vector();
        v.add(rs.getString("stock_product_id"));
        v.add(rs.getString("stock_id"));
        v.add(rs.getString("name"));
        v.add(rs.getString("price"));
        v.add(rs.getString("qty"));
        v.add(rs.getString("subtotal"));
        v.add(rs.getString("rqty"));
        v.add(rs.getString("saleid"));
        this.dtm1.addRow(v);
      }
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }
  }
  
  private void returntotalgen()
  {
    double rtotal = 0.0D;
    for (int i = 0; i < this.rinvtable2.getRowCount(); i++) {
      rtotal += Double.parseDouble(this.rinvtable2.getValueAt(i, 5).toString());
    }
    this.rtotaltxt.setText(rtotal + "");
    this.rtotal2txt.setText(rtotal + "");
    setfinaltotal();
  }
  
  private void removeselectrow()
  {
    if (this.jTable1.getSelectedRow() == -1)
    {
      JOptionPane.showMessageDialog(this, "Select Row to delete");
    }
    else
    {
      this.dtm.removeRow(this.jTable1.getSelectedRow());
      if (this.dtm.getRowCount() != 0) {
        this.jTable1.setRowSelectionInterval(this.dtm.getRowCount() - 1, this.dtm.getRowCount() - 1);
      }
      itemcounttxt.setText(this.dtm.getRowCount() + "");
    }
    totalgen();
  }
  
 


}