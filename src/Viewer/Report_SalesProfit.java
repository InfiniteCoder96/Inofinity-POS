/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.io.File;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Ashan Lakshitha
 */
public class Report_SalesProfit extends javax.swing.JDialog {

    DB d = new DB();
    DefaultTableModel dtm ;
    /**
     * Creates new form Report_SalesProfit
     */
    DecimalFormat df;
    private int Xmouse;
    private int Ymouse;
    
    public Report_SalesProfit(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        df = new DecimalFormat("####0.00");
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        fromdate.setDateFormat(sdf);
        todate.setDateFormat(sdf);
        dtm = (DefaultTableModel) jTable1.getModel();
        chartrb.setSelected(true);
        selectpanel();
        viewchartD();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        fromdate = new datechooser.beans.DateChooserCombo();
        todate = new datechooser.beans.DateChooserCombo();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        saletxt = new javax.swing.JTextField();
        profittxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cpanel = new javax.swing.JPanel();
        vpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        chartrb = new javax.swing.JRadioButton();
        tablerb = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(942, 454));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        fromdate.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                fromdateOnCommit(evt);
            }
        });
        fromdate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                fromdateOnSelectionChange(evt);
            }
        });

        todate.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                todateOnCommit(evt);
            }
        });
        todate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                todateOnSelectionChange(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Total Sale : ");

        saletxt.setEditable(false);
        saletxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        saletxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        profittxt.setEditable(false);
        profittxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        profittxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Total Profit : ");

        jPanel2.setLayout(new java.awt.CardLayout());

        cpanel.setLayout(new java.awt.BorderLayout());
        jPanel2.add(cpanel, "card2");

        vpanel.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date", "Sale", "Profit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout vpanelLayout = new javax.swing.GroupLayout(vpanel);
        vpanel.setLayout(vpanelLayout);
        vpanelLayout.setHorizontalGroup(
            vpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 902, Short.MAX_VALUE)
                .addContainerGap())
        );
        vpanelLayout.setVerticalGroup(
            vpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.add(vpanel, "card3");

        buttonGroup1.add(chartrb);
        chartrb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chartrb.setText(" View chart");
        chartrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartrbActionPerformed(evt);
            }
        });

        buttonGroup1.add(tablerb);
        tablerb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tablerb.setText(" View in table");
        tablerb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablerbActionPerformed(evt);
            }
        });

        jButton3.setText("Print Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chartrb, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tablerb, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(profittxt))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(saletxt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saletxt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(chartrb)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(profittxt)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(tablerb)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addComponent(todate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fromdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {profittxt, saletxt});

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        viewchartD();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void fromdateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_fromdateOnSelectionChange
        
    }//GEN-LAST:event_fromdateOnSelectionChange

    private void todateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_todateOnSelectionChange
        
    }//GEN-LAST:event_todateOnSelectionChange

    private void chartrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartrbActionPerformed
        selectpanel();
    }//GEN-LAST:event_chartrbActionPerformed

    private void tablerbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablerbActionPerformed
        selectpanel();
    }//GEN-LAST:event_tablerbActionPerformed

    private void fromdateOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_fromdateOnCommit
        viewchartD();
    }//GEN-LAST:event_fromdateOnCommit

    private void todateOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_todateOnCommit
        viewchartD();
    }//GEN-LAST:event_todateOnCommit

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        this.setLocation(x - Xmouse, y - Ymouse);
    }//GEN-LAST:event_formMouseDragged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        printreport();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report_SalesProfit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report_SalesProfit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report_SalesProfit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report_SalesProfit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Report_SalesProfit dialog = new Report_SalesProfit(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton chartrb;
    private javax.swing.JPanel cpanel;
    private datechooser.beans.DateChooserCombo fromdate;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField profittxt;
    private javax.swing.JTextField saletxt;
    private javax.swing.JRadioButton tablerb;
    private datechooser.beans.DateChooserCombo todate;
    private javax.swing.JPanel vpanel;
    // End of variables declaration//GEN-END:variables

    private void viewReport() {
        String fromd = fromdate.getText();
        String tod = todate.getText();
        try {
            JasperReport jr=JasperCompileManager.compileReport(getClass().getResourceAsStream("/Reports/Sales & Profit Report.jrxml"));
            java.util.Map m=new java.util.HashMap();
            m.put("fromdate", fromd);
            m.put("todate", tod);
            JasperPrint jp=JasperFillManager.fillReport(jr, m , d.getConnection());
            JasperViewer.viewReport(jp, false);
            JRViewer jv = new JRViewer(jp );
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void viewchart() {
        DefaultPieDataset dt = new DefaultPieDataset();
        dt.setValue("one", 50);
        dt.setValue("two", 100);
        dt.setValue("three", 150);
        dt.setValue("four", 20);
        dt.setValue("five", 70);
        JFreeChart chart = ChartFactory.createPieChart("Pie Cahrt", dt, true, true, true);
        PiePlot p = (PiePlot) chart.getPlot();
        //jPanel2.add(new ChartPanel(chart,true));
        ChartFrame cf = new ChartFrame("Chart", chart);
        cf.setVisible(true);
        cf.setSize(400, 500);
        
    }
    
    private void viewchartD() {
        dtm.setRowCount(0);
        
        try {
              String Sale = "Sale";
              String Profit = "Profit";
              String Date = "";
              Double totalsale = 0.0;
              Double totalprofit = 0.0;
              SimpleDateFormat sdf = new SimpleDateFormat("MM-dd");
              
              Double ts = 0.0;
              Double tp = 0.0;
              
              
              DefaultCategoryDataset dataset = new DefaultCategoryDataset();
              ResultSet rs = d.srh("SELECT\n" +
"     invoice_reg.`id` AS invoice_reg_id,\n" +
"     invoice.`invoice_reg_id` AS invoice_invoice_reg_id,\n" +
"     invoice_reg.`date` AS invoice_reg_date,\n" +
"     sum(invoice.`subtotal`) AS sale,\n" +
"     sum(invoice.`totalprofit`) AS profit\n" +
"FROM\n" +
"     `invoice_reg` invoice_reg INNER JOIN `invoice` invoice ON invoice_reg.`id` = invoice.`invoice_reg_id`"
                      + "where invoice_reg.date between '"+fromdate.getText()+" 00:00:00' and '"+todate.getText()+" 23:59:59' " +
"GROUP BY\n" +
"     date(invoice_reg.`date`)");
              
              while (rs.next()) {
                  Date = sdf.format(rs.getDate("invoice_reg_date")).toString();
                  totalsale = rs.getDouble("sale");
                  totalprofit = rs.getDouble("profit");
                  
                  ts = ts + totalsale;
                  tp = tp + totalprofit;
                  
                  dataset.addValue( totalsale , Sale , Date ); 
                  dataset.addValue( totalprofit , Profit , Date );
                  
                  Vector v = new Vector();
                  v.add(Date);
                  v.add(totalsale);
                  v.add(totalprofit);
                  dtm.addRow(v);
                  
              }

              JFreeChart areaChart = ChartFactory.createAreaChart("","Date", "Rs. ",dataset,PlotOrientation.VERTICAL,true, true, false);
              
              ChartPanel cp = new ChartPanel(areaChart);
              cpanel.removeAll();
              cpanel.add(cp);
              cpanel.validate();
              
              saletxt.setText("Rs. " + df.format(ts));
              profittxt.setText("Rs. " + df.format(tp));
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    void selectpanel(){
        if(tablerb.isSelected()){
            jPanel2.add(cpanel);
            jPanel2.revalidate();
        }else{
            jPanel2.add(vpanel);
            jPanel2.revalidate();
        }
    }
    
    private void printreport() {
    
        try{
          JasperReport jr = (JasperReport)JRLoader.loadObject(new File("D:\\invoice\\summery.jasper"));

          Map m = new HashMap();
          
          String f = fromdate.getText()+" 00:00:00";
          String t = todate.getText()+" 23:59:59";

          m.put("fromdate", f);
          m.put("todate", t);         

          JasperPrint jp = JasperFillManager.fillReport(jr, m, this.d.getConnection());

          JasperViewer.viewReport(jp, false);
          //JasperPrintManager.printReport(jp, true);
        
        }catch (Exception e){
          JOptionPane.showMessageDialog(this, e);
        }
    
    }
    
}
