/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Thisara Sampath
 */
public class search_stockgrn extends javax.swing.JPanel {

    /**
     * Creates new form Stock_search
     */
    DB d = new DB();
    DecimalFormat df;
    DefaultTableModel dtm ;
    
    
    public search_stockgrn() {
        initComponents();
        setFronttext();
        settable();
        dtm = (DefaultTableModel) jTable1.getModel();
        df = new DecimalFormat(" #,##0.00");
        todate.setMaxDate(Calendar.getInstance());
        fromdate.setMaxDate(todate.getCurrent());
        todate.setMinDate(fromdate.getCurrent());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        todate.setDateFormat(sdf);
        fromdate.setDateFormat(sdf);
        resetsearch();
        clear(0);
    }

    private void setFronttext(){
        setPrompt(txt , "Barcode");
        
    }
    
    private void setPrompt( JTextField field , String text ){
        PromptSupport.setPrompt(text, field);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, field);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        selectcombo = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        txt = new javax.swing.JTextField();
        combo = new javax.swing.JComboBox();
        todate = new datechooser.beans.DateChooserCombo();
        fromdate = new datechooser.beans.DateChooserCombo();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        grnqty = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        totalamounttxt = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(668, 462));
        setMinimumSize(new java.awt.Dimension(668, 462));
        setPreferredSize(new java.awt.Dimension(668, 462));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "stock_id", "Date", "Barcode", "Supplier ID", "Name", "Cashier", "Buy Price", "Qty", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(180);
        }

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search By"));

        jButton5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        selectcombo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        selectcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Barcode", "Supplier", "Date", "Cashier" }));
        selectcombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectcomboItemStateChanged(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKeyReleased(evt);
            }
        });
        jPanel1.add(txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 34));

        combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 34));

        todate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                todateOnSelectionChange(evt);
            }
        });
        jPanel1.add(todate, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 96, 32));

        fromdate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                fromdateOnSelectionChange(evt);
            }
        });
        jPanel1.add(fromdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 98, 32));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(selectcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setOpaque(false);
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setOpaque(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/inv (3).png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("GRN Qty");

        grnqty.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        grnqty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(grnqty, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grnqty, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 160));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel6.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 10, 120));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/inv (1).png"))); // NOI18N
        jPanel6.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 113, 43));

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Total Amount");
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 105, 28));

        totalamounttxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        totalamounttxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel6.add(totalamounttxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 113, 32));

        jButton1.setText("View Full Supplier Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("View Full Product Details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(342, 342, 342)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

    }// </editor-fold>//GEN-END:initComponents

    private void txtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeyReleased
        searchtable();
    }//GEN-LAST:event_txtKeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        searchtable();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void todateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_todateOnSelectionChange
        fromdate.setMaxDate(todate.getCurrent());
        searchtable();
    }//GEN-LAST:event_todateOnSelectionChange

    private void fromdateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_fromdateOnSelectionChange
        todate.setMinDate(fromdate.getCurrent());
        searchtable();
    }//GEN-LAST:event_fromdateOnSelectionChange

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void selectcomboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectcomboItemStateChanged
        resetsearch();
    }//GEN-LAST:event_selectcomboItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if(jTable1.getSelectedRow() == -1){
        
        }else{
            int si = jTable1.getSelectedRow();
            String i = dtm.getValueAt(si, 3).toString();
            try {
                ResultSet rs = d.srh("select * from supplier where id = '"+i+"' ");
                while (rs.next()) {                    
                    String p = dtm.getValueAt(si, 2).toString() + " - " + dtm.getValueAt(si, 4).toString();
                    String s = "<HTML>" + rs.getString("name")  + "<br>" + rs.getString("garment") + "<br>" +  rs.getString("address") + "<br>" +  rs.getString("tel") + "</HTML>"; 
                    //new fulldetailspanel( p , s ,null, false).setVisible(true);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox combo;
    private datechooser.beans.DateChooserCombo fromdate;
    private javax.swing.JLabel grnqty;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox selectcombo;
    private datechooser.beans.DateChooserCombo todate;
    private javax.swing.JLabel totalamounttxt;
    private javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables

    private void searchtable() {
        if(selectcombo.getSelectedItem().equals("Barcode")){
            loadtable("product_id", txt.getText());
        }else if(selectcombo.getSelectedItem().equals("Supplier")){
            combo.setVisible(true);
            loadtable("supplier_id", "0");
        }else if(selectcombo.getSelectedItem().equals("Date")){
            fromdate.setVisible(true);
            todate.setVisible(true);
            loadtable("date", fromdate.getText());
        }else if(selectcombo.getSelectedItem().equals("Cashier")){
            combo.setVisible(true);
            loadtable("user_usename", combo.getSelectedItem().toString());
        }
    
    }
    
    private void loadtable(String colum , String data){
        try {
                dtm.setRowCount(0);
                ResultSet rs = d.srh("select * from stock inner join product on stock.product_id = product.id inner join supplier on stock.supplier_id = supplier.id where "+colum+" LIKE '%"+data+"%' ");
                while(rs.next()){
                    Vector v = new Vector();
                    v.add(rs.getString("stock.id"));
                    v.add(rs.getString("date"));
                    v.add(rs.getString("product_id"));
                    v.add(rs.getString("supplier.name"));
                    v.add(rs.getString("product.name"));
                    v.add(rs.getString("user_usename"));
                    v.add(rs.getString("buyprice"));
                    v.add(rs.getString("buyqty"));
                    v.add(rs.getDouble("buycost"));
                    dtm.addRow(v);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
    }
    
    private void clear(int i){
        if(i == 0){
            txt.setText("");
            fromdate.setCurrent(Calendar.getInstance());
            todate.setCurrent(Calendar.getInstance());    
        }else if(i==1){
        }
    }

    /*private void suppliers() {
        Double mintotal ;
        Double maxtotal;
       
        if(morethsn.getText().isEmpty()){
           mintotal = 0.0;
        }else{
           mintotal = Double.parseDouble(morethsn.getText());
        }
       
        if(lessthan.getText().isEmpty()){
           maxtotal = 999999.0;
        }else{
           maxtotal = Double.parseDouble(lessthan.getText());
        }
       
        try {
            int customer = 0;
            ResultSet rs2 = new DB().srh("select DISTINCT supplier_id from grn_reg where id LIKE '"+grnidtxt.getText()+"%'  AND setion_user_name LIKE '"+usertxt.getText()+"%' AND total >= '"+mintotal+"' AND total <= '"+maxtotal+"' AND date between '"+fromdate.getText()+"' AND '"+todate.getText()+"' ");
            while(rs2.next()){
                customer = customer + 1;
            }
            grnqty.setText(jTable1.getRowCount() + "");
            supplierstxt.setText(customer + ""); 
            
        } catch (Exception e) {
            e.printStackTrace();
        }
            
    }*/

    private void printReportr() {
        
        try {
            //1 compile jrxm file
        JasperReport jr=JasperCompileManager.compileReport("C:\\Petshop\\grn.jrxml");
        //2insert paramters
        java.util.Map m=new java.util.HashMap();
        //java.util.Date d=new Date(2015, 2, 236);
        //m.put("ID",i );
        //m.put("c_by", "Ashen");
        //m.put("age",10 );
        //String s=txt1.getText();
        //m.put("age", Integer.parseInt(s));
        //3 run engine
            JasperPrint jp=JasperFillManager.fillReport(jr, m , d.getConnection());
        //4 view result
            JasperViewer.viewReport(jp , false);
            JRViewer jv=new JRViewer(jp);
            //JasperPrintManager.printReport(jp, true);
           
        } catch (Exception e) {
        }
    
    
    
    }

    private void settable() {
    
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        jTable1.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
        jTable1.getColumnModel().getColumn(7).setCellRenderer(rightRenderer);
        jTable1.getColumnModel().getColumn(8).setCellRenderer(rightRenderer);
    
    }

    private void resetsearch() {
        txt.setVisible(false);
        combo.setVisible(false);
        todate.setVisible(false);
        fromdate.setVisible(false);
        combo.removeAllItems();
        if(selectcombo.getSelectedItem().equals("Barcode")){
            txt.setVisible(true);
        }else if(selectcombo.getSelectedItem().equals("Supplier")){
            combo.setVisible(true);
            try {
                ResultSet rs = d.srh("select * from supplier");
                while(rs.next()){
                    combo.addItem(rs.getString("name"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else if(selectcombo.getSelectedItem().equals("Date")){
            fromdate.setVisible(true);
            todate.setVisible(true);
        }else if(selectcombo.getSelectedItem().equals("Cashier")){
            combo.setVisible(true);
            try {
                ResultSet rs = d.srh("select * from user");
                while(rs.next()){
                    combo.addItem(rs.getString("name"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        searchtable();
    }
}
