/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javafx.scene.input.KeyCode;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Ashan Lakshitha
 */
public class spinv extends javax.swing.JDialog {

    /**
     * Creates new form invoice
     */
    DB d = new DB();
    DefaultListModel jlm;
    DefaultListModel jlm1;
    DefaultListModel dlm1;
    DefaultTableModel dtm;
    DefaultTableModel dtm1;
    DefaultTableModel dtm2;
    String user;
    
    public spinv(java.awt.Frame parent, boolean modal ,  String u) {
        super(parent, modal);
        initComponents();
        user = u;
        setFrontText();
        this.jlm = new DefaultListModel();
        this.jlm1 = new DefaultListModel();
        this.dlm1 = new DefaultListModel();
        this.dtm = ((DefaultTableModel)this.jTable1.getModel());
        this.cinfotxt.setText("Cash Sale");
        this.pricetxt.requestFocus();
    }
    
    private void setFrontText() {
        setPront(this.qtytxt, "Qty");
        setPront(this.pricetxt, "Price");
    }

    private void setPront(JTextField a, String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }
    
    private void setPront(JTextArea a, String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainpanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cinfotxt = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        qtytxt = new javax.swing.JTextField();
        pricetxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        subtotaltxt = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        totaltxt = new javax.swing.JLabel();
        itemqty = new javax.swing.JLabel();
        cididtxt = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        mainpanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("INVOICE");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 28, -1, 34));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("create");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 11, -1, 17));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/colored-03-48.png"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 72, 57));

        cinfotxt.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jPanel2.add(cinfotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 170, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("Add Products To Invoice ");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, -1, 20));

        jTable1.setFont(new java.awt.Font("Iskoola Pota", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Qty", "Total"
            }
        ));
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 102));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(130);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(130);
        }

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 502, 250));

        qtytxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        qtytxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        qtytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtytxtActionPerformed(evt);
            }
        });
        qtytxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtytxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtytxtKeyTyped(evt);
            }
        });
        jPanel3.add(qtytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 160, 37));

        pricetxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        pricetxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pricetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricetxtActionPerformed(evt);
            }
        });
        pricetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pricetxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pricetxtKeyTyped(evt);
            }
        });
        jPanel3.add(pricetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 153, 37));

        jButton1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton1.setText("Add To List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 110, 36));

        subtotaltxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        subtotaltxt.setForeground(new java.awt.Color(255, 0, 51));
        subtotaltxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtotaltxt.setText("Rs. 0.00");
        jPanel3.add(subtotaltxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 146, 37));

        jButton2.setText("Remove Row");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 300, 120, -1));

        jButton3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton3.setText("Pay Now");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 320, 60));

        jLabel3.setText("Total");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 70, 30));

        jLabel6.setText("Item Qty");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 70, 30));

        totaltxt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel3.add(totaltxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 160, 50));

        itemqty.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel3.add(itemqty, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 110, 50));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 870, 340));

        cididtxt.setBackground(new java.awt.Color(255, 255, 255));
        cididtxt.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(cididtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, 30, 20));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("CLEAN");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, 110, 50));

        javax.swing.GroupLayout mainpanel1Layout = new javax.swing.GroupLayout(mainpanel1);
        mainpanel1.setLayout(mainpanel1Layout);
        mainpanel1Layout.setHorizontalGroup(
            mainpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainpanel1Layout.setVerticalGroup(
            mainpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(mainpanel1, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addtolist();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pricetxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricetxtKeyTyped
        char c = evt.getKeyChar();

        String key = String.valueOf(c);

        if  (key.equals("q")) {
            evt.consume();
            jButton3.requestFocus();
        }else if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }

        if(pricetxt.getText().contains(".") && key.equals(".")){
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_pricetxtKeyTyped

    private void pricetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricetxtKeyReleased
        subtotalgen();
    }//GEN-LAST:event_pricetxtKeyReleased

    private void pricetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricetxtActionPerformed
        if(pricetxt.getText().isEmpty()){

        }else{
            qtytxt.requestFocus();
        }
    }//GEN-LAST:event_pricetxtActionPerformed

    private void qtytxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtytxtKeyTyped
        char c = evt.getKeyChar();

        String key = String.valueOf(c);

        if  (key.equals("q")) {
            evt.consume();
            jButton3.requestFocus();
        }else if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
        }

        if(pricetxt.getText().contains(".") && key.equals(".")){
            evt.consume();
//            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_qtytxtKeyTyped

    private void qtytxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtytxtKeyReleased
        subtotalgen();
    }//GEN-LAST:event_qtytxtKeyReleased

    private void qtytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtytxtActionPerformed
        if(qtytxt.getText().isEmpty()){

        }else{
            addtolist();
        }
    }//GEN-LAST:event_qtytxtActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        removeselectrow();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        saveinvoice();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        clearinv();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(spinv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(spinv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(spinv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(spinv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                spinv dialog = new spinv(new javax.swing.JFrame(), true , "admin" );
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel cididtxt;
    private javax.swing.JLabel cinfotxt;
    private javax.swing.JLabel itemqty;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel mainpanel1;
    private javax.swing.JTextField pricetxt;
    private javax.swing.JTextField qtytxt;
    private javax.swing.JLabel subtotaltxt;
    private javax.swing.JLabel totaltxt;
    // End of variables declaration//GEN-END:variables
  
 
  private void subtotalgen()
  {
    if (this.pricetxt.getText().isEmpty())
    {
      this.subtotaltxt.setText("Rs. 0.00");
    }
    else if (this.qtytxt.getText().isEmpty())
    {
      this.subtotaltxt.setText("Rs. 0.00");
    }
    else
    {
      double price = Double.parseDouble(this.pricetxt.getText());
      double qty = Double.parseDouble(this.qtytxt.getText());
      this.subtotaltxt.setText("Rs. " + price * qty);
    }
  }
  
  private void addtolist()
  {
    if (this.pricetxt.getText().isEmpty())
    {
      this.pricetxt.requestFocus();
    }
    else if (this.qtytxt.getText().isEmpty())
    {
      this.qtytxt.requestFocus();
    }
    else
    {
      double price = Double.parseDouble(this.pricetxt.getText());
      double qty = Double.parseDouble(this.qtytxt.getText());
      
        listing(1);
      
    }
    totalgen();
  }
  
  private void listing(int i)
  {
    if (i == 1)
    {
      Vector v = new Vector();
      v.add("Other Item");
      v.add(this.pricetxt.getText());
      v.add(this.qtytxt.getText());
      v.add(Double.valueOf(Double.parseDouble(this.pricetxt.getText()) * Double.parseDouble(this.qtytxt.getText())));
      this.dtm.addRow(v);
      Toolkit.getDefaultToolkit().beep();
    }
    pricetxt.setText("");
    qtytxt.setText("");
    itemqty.setText(dtm.getRowCount() + "");
    pricetxt.requestFocus();
    
  }
  
  private void totalgen()
  {
    if (this.dtm.getRowCount() != 0)
    {
      Double total = Double.valueOf(0.0D);
      for (int i = 0; i < this.dtm.getRowCount(); i++) {
        total = Double.valueOf(total.doubleValue() + Double.parseDouble(this.dtm.getValueAt(i, 3).toString()));
      }
      this.totaltxt.setText(total + "");
    }
    else{
        totaltxt.setText("0.0");
    }
  }
  
  
  private void saveinvoice()
  {
    if (this.dtm.getRowCount() == 0)
    {
      JOptionPane.showMessageDialog(this, "Please insert product first");
      pricetxt.requestFocus();
    }
    else if (this.totaltxt.getText().isEmpty())
    {
      JOptionPane.showMessageDialog(this, "Enter Products");
      totalgen();
    }
    else
    {
      try
      {
        int invid = this.d.nextnum("select max(id) from invoice_reg", "max(id)");
            
          
          this.d.aud("insert into invoice_reg(id, date, total, discount, grandtotal, user_usename, customer_id, extra, active ,payment , due  ) Values( '" + invid + "' , NOW() , '" + this.totaltxt
            .getText() + "' , '0.0' , '" + this.totaltxt.getText() + "' , '" + this.user + "' , '0' , '' , '1' , '" + totaltxt.getText() + "' , '0' ) ");
          
          int j = this.d.audr("insert into customer_payment (customer_id, date, payment, payment_type, extra, user_usename, previous, due , t) values('0' , NOW() , '" + this.totaltxt.getText() + "'  , 'Cash' , ' ' , '" + this.user + "' , '0' , '0' , '1' ) ");
          for (int i = 0; i < this.dtm.getRowCount(); i++)
          {
              
            this.d.aud("insert into invoice(invoice_reg_id, stock_id, stock_product_id, price, qty, subtotal, cost, totalprofit, rqty) VALUES('" + invid + "' , '0' , '0' , '" + this.dtm.getValueAt(i, 1) + "' , '" + this.dtm.getValueAt(i, 2) + "' , '" + this.dtm.getValueAt(i, 3) + "' , '0' , '0' , '0' )");
          
          }
          clearinv();
          JOptionPane.showMessageDialog(this, "Saved Successfully");
          ViewReport(invid);
          this.pricetxt.requestFocus();
        }
      
      catch (Exception e)
      {
        e.printStackTrace();
      }
    }
  }
  
  public void ViewReport(int i)
  {
    try
    {
      JasperReport jr = (JasperReport)JRLoader.loadObject(new File("C:\\Program Files (x86)\\POS\\invoiceprintfast.jasper"));
      
      Map m = new HashMap();
      
      m.put("ID", Integer.valueOf(i));
      
      JasperPrint jp = JasperFillManager.fillReport(jr, m, this.d.getConnection());
      
      JasperPrintManager.printReport(jp, true);
    }
    catch (Exception e)
    {
      JOptionPane.showMessageDialog(this, e);
    }
  }
   
  
    private void removeselectrow() {
    
        if(jTable1.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this, "Select Row to delete");
        }else{
            dtm.removeRow(jTable1.getSelectedRow());
        }
        totalgen();
    
    }

    private void clearinv() {
    
        pricetxt.setText("");
        qtytxt.setText("");
        dtm.setRowCount(0);
        totaltxt.setText("0.0");
        itemqty.setText(dtm.getRowCount() + "");
        pricetxt.requestFocus();
    }
    
}
