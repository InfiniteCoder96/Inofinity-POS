/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Ashan Lakshitha
 */
public class invoice_date extends javax.swing.JDialog {

    /**
     * Creates new form invoice
     */
    DB d = new DB();
    DefaultListModel jlm ;
    DefaultListModel jlm1 ;
    DefaultListModel dlm1 ;
    DefaultTableModel dtm;
    String user ;
    
    public invoice_date(java.awt.Frame parent, boolean modal ,  String u) {
        super(parent, modal);
        initComponents();
        user = u;
        setFrontText();
        cashrb.setSelected(true);
        setpanel();
        jlm = new DefaultListModel();
        jlm1 = new DefaultListModel();
        dlm1 = new DefaultListModel();
        dtm = (DefaultTableModel) jTable1.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        invdate.setDateFormat(sdf);
        numberlist4.setVisible(false);
        numberlist3.setVisible(false);
        numberlist1.setVisible(false);
        numberlist2.setVisible(false);
        clear(3);
        clear(4);
        cidtxt.requestFocus();
    }
    
    private void setFrontText() {
        //setPront(cidtxt , "Customer ID");
        //setPront(cnametxt, "Customer Name");
        setPront(pidtxt, "New Barcode");
        setPront(qtytxt, "Qty");
        setPront(pricetxt, "Price");
        setPront(totaltxt, "Total");
        setPront(totaltxt2, "Total");
        setPront(extratxt, "Extra Information");
    }

    private void setPront(JTextField a, String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }
    
    private void setPront(JTextArea a, String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        cidtxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cinfotxt = new javax.swing.JLabel();
        numberlist3 = new javax.swing.JScrollPane();
        numberlist4 = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        pidtxt = new javax.swing.JTextField();
        pnametxt = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        stocklbl = new javax.swing.JLabel();
        minlbl = new javax.swing.JLabel();
        maxlbl = new javax.swing.JLabel();
        wlbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        numberlist2 = new javax.swing.JScrollPane();
        numberlist1 = new javax.swing.JList();
        qtytxt = new javax.swing.JTextField();
        pricetxt = new javax.swing.JTextField();
        stockcombo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        subtotaltxt = new javax.swing.JLabel();
        changepanel = new javax.swing.JPanel();
        cashpanel = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        totaltxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        creditpanel = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        totaltxt2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        paymenttxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        duetxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        creditrb = new javax.swing.JRadioButton();
        cashrb = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        extratxt = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        cididtxt = new javax.swing.JLabel();
        invdate = new datechooser.beans.DateChooserCombo();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ui_04_of_9-15-20.png"))); // NOI18N
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 30, 30));

        cidtxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidtxtActionPerformed(evt);
            }
        });
        cidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cidtxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cidtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cidtxtKeyTyped(evt);
            }
        });
        jPanel5.add(cidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 37));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 230, -1));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("Invoice with custom date");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 190, 30));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/colored-03-48.png"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 72, 57));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("Customer Details");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, 20));

        cinfotxt.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jPanel2.add(cinfotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 170, 50));

        numberlist4.setBackground(new java.awt.Color(0, 0, 0));
        numberlist4.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        numberlist4.setForeground(new java.awt.Color(255, 255, 255));
        numberlist4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        numberlist4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        numberlist4.setSelectionBackground(new java.awt.Color(0, 102, 102));
        numberlist4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                numberlist4MouseClicked(evt);
            }
        });
        numberlist4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberlist4KeyReleased(evt);
            }
        });
        numberlist4.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                numberlist4ValueChanged(evt);
            }
        });
        numberlist3.setViewportView(numberlist4);

        jPanel2.add(numberlist3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 230, 130));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 957, 13));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("Add Products To Invoice ");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, -1, 20));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 0, 10, 350));

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ui_04_of_9-15-20.png"))); // NOI18N
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel6.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 30, 30));

        pidtxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        pidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidtxtActionPerformed(evt);
            }
        });
        pidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pidtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pidtxtKeyTyped(evt);
            }
        });
        jPanel6.add(pidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 37));

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 32, -1, -1));

        pnametxt.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jPanel3.add(pnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 27, 173, 42));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Stock");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Def. Price");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Minimum Price");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Maximum Price");

        stocklbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        stocklbl.setForeground(new java.awt.Color(102, 0, 102));
        stocklbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stocklbl.setText("0");

        minlbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        minlbl.setForeground(new java.awt.Color(102, 0, 102));
        minlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minlbl.setText("0.00");

        maxlbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        maxlbl.setForeground(new java.awt.Color(102, 0, 102));
        maxlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        maxlbl.setText("0.00");

        wlbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        wlbl.setForeground(new java.awt.Color(102, 0, 102));
        wlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wlbl.setText("0.00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stocklbl, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minlbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(maxlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(wlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {maxlbl, minlbl, stocklbl, wlbl});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(minlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stocklbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wlbl))))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {maxlbl, minlbl, stocklbl, wlbl});

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, -1, -1));

        jTable1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No#", "Barcode", "Name", "Price", "Qty", "Total"
            }
        ));
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 102));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(40);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(40);
            jTable1.getColumnModel().getColumn(2).setMinWidth(130);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(130);
        }

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 0, 502, 220));

        numberlist1.setBackground(new java.awt.Color(0, 0, 0));
        numberlist1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        numberlist1.setForeground(new java.awt.Color(255, 255, 255));
        numberlist1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        numberlist1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        numberlist1.setSelectionBackground(new java.awt.Color(0, 102, 102));
        numberlist1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                numberlist1MouseClicked(evt);
            }
        });
        numberlist1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberlist1KeyReleased(evt);
            }
        });
        numberlist1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                numberlist1ValueChanged(evt);
            }
        });
        numberlist2.setViewportView(numberlist1);

        jPanel3.add(numberlist2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 290, 100));

        qtytxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        qtytxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        qtytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtytxtActionPerformed(evt);
            }
        });
        qtytxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtytxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtytxtKeyTyped(evt);
            }
        });
        jPanel3.add(qtytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 80, 146, 37));

        pricetxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        pricetxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pricetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricetxtActionPerformed(evt);
            }
        });
        pricetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pricetxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pricetxtKeyTyped(evt);
            }
        });
        jPanel3.add(pricetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 80, 153, 37));

        stockcombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stockcomboItemStateChanged(evt);
            }
        });
        jPanel3.add(stockcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 93, 37));

        jButton1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton1.setText("Add To List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 110, 36));

        subtotaltxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        subtotaltxt.setForeground(new java.awt.Color(255, 0, 51));
        subtotaltxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtotaltxt.setText("Rs. 0.00");
        jPanel3.add(subtotaltxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 146, 37));

        changepanel.setLayout(new java.awt.CardLayout());

        cashpanel.setBackground(new java.awt.Color(255, 255, 255));

        jButton3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton3.setText("Pay Now");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        totaltxt.setEditable(false);
        totaltxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        totaltxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totaltxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totaltxtActionPerformed(evt);
            }
        });
        totaltxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totaltxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                totaltxtKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel17.setText("Total");

        javax.swing.GroupLayout cashpanelLayout = new javax.swing.GroupLayout(cashpanel);
        cashpanel.setLayout(cashpanelLayout);
        cashpanelLayout.setHorizontalGroup(
            cashpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashpanelLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(cashpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addGroup(cashpanelLayout.createSequentialGroup()
                        .addComponent(totaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        cashpanelLayout.setVerticalGroup(
            cashpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cashpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        changepanel.add(cashpanel, "card2");

        creditpanel.setBackground(new java.awt.Color(255, 255, 255));

        jButton4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButton4.setText("Pay");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        totaltxt2.setEditable(false);
        totaltxt2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        totaltxt2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totaltxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totaltxt2ActionPerformed(evt);
            }
        });
        totaltxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totaltxt2KeyReleased(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel18.setText("Total");

        paymenttxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        paymenttxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        paymenttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymenttxtActionPerformed(evt);
            }
        });
        paymenttxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paymenttxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paymenttxtKeyTyped(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel19.setText("Payment");

        duetxt.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        duetxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        duetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duetxtActionPerformed(evt);
            }
        });
        duetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                duetxtKeyReleased(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel20.setText("Due");

        javax.swing.GroupLayout creditpanelLayout = new javax.swing.GroupLayout(creditpanel);
        creditpanel.setLayout(creditpanelLayout);
        creditpanelLayout.setHorizontalGroup(
            creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(totaltxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(paymenttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creditpanelLayout.createSequentialGroup()
                        .addComponent(duetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel20))
                .addGap(31, 31, 31))
        );

        creditpanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {duetxt, paymenttxt, totaltxt2});

        creditpanelLayout.setVerticalGroup(
            creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(creditpanelLayout.createSequentialGroup()
                        .addGroup(creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paymenttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(duetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(creditpanelLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(creditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totaltxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        changepanel.add(creditpanel, "card3");

        jPanel3.add(changepanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, 500, 100));

        buttonGroup1.add(creditrb);
        creditrb.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        creditrb.setText("Credit");
        creditrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditrbActionPerformed(evt);
            }
        });
        jPanel3.add(creditrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 230, -1, -1));

        buttonGroup1.add(cashrb);
        cashrb.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cashrb.setText("Cash");
        cashrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashrbActionPerformed(evt);
            }
        });
        jPanel3.add(cashrb, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, -1, -1));

        extratxt.setColumns(20);
        extratxt.setRows(5);
        extratxt.setTabSize(5);
        extratxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                extratxtKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(extratxt);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, 200, 50));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 960, 360));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add-80px-24.png"))); // NOI18N
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 30, 30));

        cididtxt.setBackground(new java.awt.Color(255, 255, 255));
        cididtxt.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(cididtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, 30, 20));
        jPanel2.add(invdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 160, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 977, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidtxtActionPerformed
        /*if(cpidtxt.getText().isEmpty()){
            new quicksrh(null, true ).setVisible(true);
        }else if(cpnametxt.getText().isEmpty()){

        }else{
            cbuytxt.requestFocus();
        }*/
        
        
    }//GEN-LAST:event_cidtxtActionPerformed

    private void cidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cidtxtKeyReleased
        cinfotxt.setText("");
        if(cidtxt.getText().isEmpty()){
            numberlist4.setVisible(false);
            numberlist3.setVisible(false);
            
        }else{
            searchcustomers();
        }
        
        if(numberlist3.isVisible()){
            if(evt.getKeyCode() == KeyEvent.VK_DOWN){
                
                if(numberlist4.getModel().getSize() == 0){
                
                }else{
                    numberlist4.requestFocus();
                    numberlist4.setSelectedIndex(0);
                }
            }
        }
    }//GEN-LAST:event_cidtxtKeyReleased

    private void numberlist4ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_numberlist4ValueChanged
        
    }//GEN-LAST:event_numberlist4ValueChanged

    private void numberlist4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_numberlist4MouseClicked
        cidtxt.setText(numberlist4.getSelectedValue().toString());
        setcustomerinfo();
        numberlist4.setVisible(false);
        numberlist3.setVisible(false);
    }//GEN-LAST:event_numberlist4MouseClicked

    private void pidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidtxtActionPerformed
        if(pidtxt.getText().isEmpty()){
            
        }else if(pnametxt.getText().isEmpty()){
        
        }else if(stockcombo.getItemCount() == 0){
            JOptionPane.showMessageDialog(this, "No Stock Available");
        }else{
            pricetxt.requestFocus();
        }
    }//GEN-LAST:event_pidtxtActionPerformed

    private void pidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidtxtKeyReleased
        if(pidtxt.getText().isEmpty()){
            numberlist2.setVisible(false);
            numberlist1.setVisible(false);
            clear(2);
            
        }else {
            searchproduct();
        }
        
        if(numberlist1.isVisible()){
            if(evt.getKeyCode() == KeyEvent.VK_DOWN){
                
                if(numberlist1.getModel().getSize() == 0){
                
                }else{
                    numberlist1.requestFocus();
                    numberlist1.setSelectedIndex(0);
                }
            }
        }
    }//GEN-LAST:event_pidtxtKeyReleased

    private void qtytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtytxtActionPerformed
        if(qtytxt.getText().isEmpty()){

        }else{
            addtolist();
        }
    }//GEN-LAST:event_qtytxtActionPerformed

    private void qtytxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtytxtKeyReleased
        subtotalgen();
    }//GEN-LAST:event_qtytxtKeyReleased

    private void pricetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricetxtActionPerformed
        if(pricetxt.getText().isEmpty()){

        }else{
            qtytxt.requestFocus();
        }
    }//GEN-LAST:event_pricetxtActionPerformed

    private void stockcomboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stockcomboItemStateChanged
        if(stockcombo.getItemCount() == 0){
        
        }else{
            loadprices();
        }
    }//GEN-LAST:event_stockcomboItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addtolist();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pricetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricetxtKeyReleased
        subtotalgen();
    }//GEN-LAST:event_pricetxtKeyReleased

    private void totaltxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totaltxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totaltxtActionPerformed

    private void totaltxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totaltxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_totaltxtKeyReleased

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        new customer_reg_date(null, false , this ).setVisible(true);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void numberlist1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_numberlist1ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_numberlist1ValueChanged

    private void numberlist1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_numberlist1MouseClicked
        String cnum = numberlist1.getSelectedValue().toString();
        String arr[] = cnum.split(" - ", 2);
        pidtxt.setText(arr[0]);
        loadproduct();
        numberlist1.setVisible(false);
        numberlist2.setVisible(false);
    }//GEN-LAST:event_numberlist1MouseClicked

    private void cidtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cidtxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidtxtKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        saveinvoice();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void creditrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditrbActionPerformed
        setpanel();
    }//GEN-LAST:event_creditrbActionPerformed

    private void cashrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashrbActionPerformed
        setpanel();
    }//GEN-LAST:event_cashrbActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        savecreditinvoice();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void totaltxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totaltxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totaltxt2ActionPerformed

    private void totaltxt2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totaltxt2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_totaltxt2KeyReleased

    private void paymenttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymenttxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymenttxtActionPerformed

    private void paymenttxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymenttxtKeyReleased
        paymengen();
    }//GEN-LAST:event_paymenttxtKeyReleased

    private void duetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_duetxtActionPerformed

    private void duetxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_duetxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_duetxtKeyReleased

    private void cidtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cidtxtKeyTyped
        char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || key.equals("/") || key.equals(" ") || key.equals("(") || key.equals(")") || key.equals("-") || key.equals("+") || key.equals("/")|| key.equals(",")|| key.equals(".") || key.equals(".") || Character.isAlphabetic(c))) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        
        if(cidtxt.getText().length() == 0 && key.equals(" ") ){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_cidtxtKeyTyped

    private void pidtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidtxtKeyTyped
        char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || key.equals("/") || key.equals(" ") || key.equals("(") || key.equals(")") || key.equals("-") || key.equals("+") || key.equals("/")|| key.equals(",")|| key.equals(".") || key.equals(".") || Character.isAlphabetic(c))) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        
        if(pidtxt.getText().length() == 0 && key.equals(" ") ){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_pidtxtKeyTyped

    private void pricetxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pricetxtKeyTyped
        char c = evt.getKeyChar();
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
	    Toolkit.getDefaultToolkit().beep();
        } 
        
        if(pricetxt.getText().contains(".") && key.equals(".")){
            evt.consume();
	    Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_pricetxtKeyTyped

    private void qtytxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtytxtKeyTyped
       char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
	    Toolkit.getDefaultToolkit().beep();
        } 
        
        if(pricetxt.getText().contains(".") && key.equals(".")){
            evt.consume();
	    Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_qtytxtKeyTyped

    private void totaltxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totaltxtKeyTyped
       char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
	    Toolkit.getDefaultToolkit().beep();
        } 
        
        if(totaltxt.getText().contains(".") && key.equals(".")){
            evt.consume();
	    Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_totaltxtKeyTyped

    private void extratxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_extratxtKeyTyped
          char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || key.equals("/") || key.equals("(") || key.equals(")") || key.equals("-") || key.equals("+") 
                || key.equals("/")|| key.equals(",")|| key.equals(".") || key.equals(".") || Character.isAlphabetic(c))) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_extratxtKeyTyped

    private void paymenttxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymenttxtKeyTyped
        char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || key.equals(".") )) {
            evt.consume();
	    Toolkit.getDefaultToolkit().beep();
        } 
        
        if(paymenttxt.getText().contains(".") && key.equals(".")){
            evt.consume();
	    Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_paymenttxtKeyTyped

    private void numberlist1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberlist1KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String cnum = numberlist1.getSelectedValue().toString();
            String arr[] = cnum.split(" - ", 2);
            pidtxt.setText(arr[0]);
            loadproduct();
            numberlist2.setVisible(false);
            numberlist1.setVisible(false);
        }
    }//GEN-LAST:event_numberlist1KeyReleased

    private void numberlist4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberlist4KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        cidtxt.setText(numberlist4.getSelectedValue().toString());
        setcustomerinfo();
        numberlist3.setVisible(false);
        numberlist4.setVisible(false);
        }
    }//GEN-LAST:event_numberlist4KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(invoice_date.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(invoice_date.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(invoice_date.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(invoice_date.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                invoice_date dialog = new invoice_date(new javax.swing.JFrame(), true , "admin" );
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel cashpanel;
    private javax.swing.JRadioButton cashrb;
    private javax.swing.JPanel changepanel;
    private javax.swing.JLabel cididtxt;
    private javax.swing.JTextField cidtxt;
    private javax.swing.JLabel cinfotxt;
    private javax.swing.JPanel creditpanel;
    private javax.swing.JRadioButton creditrb;
    private javax.swing.JTextField duetxt;
    private javax.swing.JTextArea extratxt;
    private datechooser.beans.DateChooserCombo invdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel maxlbl;
    private javax.swing.JLabel minlbl;
    private javax.swing.JList numberlist1;
    private javax.swing.JScrollPane numberlist2;
    private javax.swing.JScrollPane numberlist3;
    private javax.swing.JList numberlist4;
    private javax.swing.JTextField paymenttxt;
    private javax.swing.JTextField pidtxt;
    private javax.swing.JLabel pnametxt;
    private javax.swing.JTextField pricetxt;
    private javax.swing.JTextField qtytxt;
    private javax.swing.JComboBox stockcombo;
    private javax.swing.JLabel stocklbl;
    private javax.swing.JLabel subtotaltxt;
    private javax.swing.JTextField totaltxt;
    private javax.swing.JTextField totaltxt2;
    private javax.swing.JLabel wlbl;
    // End of variables declaration//GEN-END:variables

    private void searchcustomers() {
        try {
            numberlist4.setVisible(true);
            numberlist3.setVisible(true);
            jlm.removeAllElements();
            ResultSet rs = d.srh("select *  from customer where id LIKE '%"+cidtxt.getText()+"%' OR name LIKE '%"+cidtxt.getText()+"%' ");
            for (int i = 0; rs.next(); i++) {
                jlm.add(i, rs.getString("id") + " - " + rs.getString("name") );
            }
            numberlist4.setModel(jlm);
            
            if(numberlist4.getModel().getSize() == 0){
                numberlist4.setVisible(false);
                numberlist3.setVisible(false);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setcustomerinfo() {
        
        try {
            String cnum = cidtxt.getText().toString();
            String arr[] = cnum.split(" - ", 2);
            String firstWord = arr[0]; 
            System.out.println(firstWord);
            ResultSet rs = d.srh("select * from customer where id = '"+firstWord+"'");
            while (rs.next()) {                
                cidtxt.setText(firstWord);
                cinfotxt.setText("<html><p> "+rs.getString("name")+" <br> "+rs.getString("tel")+" </p></html>");
            }
            pidtxt.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
    private void searchproduct() {
        clear(2);
        try {
            numberlist1.setVisible(true);
            numberlist2.setVisible(true);
            jlm1.removeAllElements();
            ResultSet rs = d.srh("select *  from product where id LIKE '%"+pidtxt.getText()+"%' OR name LIKE '%"+pidtxt.getText()+"%' ");
            for (int i = 0; rs.next(); i++) {
                jlm1.add(i, rs.getString("id") + " - " + rs.getString("name") );
            }
            numberlist1.setModel(jlm1);
            
            if(numberlist1.getModel().getSize() == 0){
                numberlist1.setVisible(false);
                numberlist2.setVisible(false);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
                
    }
    
    private void loadproduct(){
        try {
            ResultSet rs = d.srh("select * from product where id = '"+pidtxt.getText()+"' ");
            while(rs.next()){
                pnametxt.setText("<html><p>"+rs.getString("name")+" <br><strong> "+rs.getString("brand_name")+" </strong></p></html>");
                loadstock();
            }
           
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void clear(int i) {
    
        if(i == 1){
            pnametxt.setText("");
        }else if(i == 2){
            pnametxt.setText("");
            pricetxt.setText("");
            qtytxt.setText("");
            subtotaltxt.setText("");
            stocklbl.setText("");
            minlbl.setText("");
            maxlbl.setText("");
            wlbl.setText("");
            stockcombo.removeAllItems();
            dlm1.removeAllElements();
            pidtxt.requestFocus();
        
        }else if(i == 3){
            pidtxt.setText("");
            pnametxt.setText("");
            pricetxt.setText("");
            qtytxt.setText("");
            subtotaltxt.setText("");
            stocklbl.setText("");
            minlbl.setText("");
            maxlbl.setText("");
            wlbl.setText("");
            stockcombo.removeAllItems();
            dlm1.removeAllElements();
            numberlist1.setVisible(false);
            numberlist2.setVisible(false);
            pidtxt.requestFocus();
        }else if(i == 4){
            cidtxt.setText("");
            cinfotxt.setText("");
            extratxt.setText("");
        }else if(i == 5){
            dtm.setRowCount(0);
            totaltxt.setText("");
            totaltxt2.setText("");
            paymenttxt.setText("");
            duetxt.setText("");
            
            cashrb.setSelected(true);
            setpanel();
        }
    
    }

    private void loadstock() {
        stockcombo.removeAllItems();
        try {
            int i = 0;
            ResultSet rs = d.srh("select * from stock where product_id = '"+pidtxt.getText()+"' and avqty > 0 ");
            while (rs.next()) {                
                stockcombo.addItem(rs.getString("id"));
                i = 1;
            }
            if(i == 1){
                loadprices();
            }else{
                JOptionPane.showMessageDialog(this, "No Stock");
                pidtxt.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }

    private void loadprices() {
    
        try {
            ResultSet rs = d.srh("select * from stock where id = '"+stockcombo.getSelectedItem().toString()+"' ");
            while (rs.next()) {                
                pricetxt.setText(rs.getString("defprice"));
                stocklbl.setText(rs.getString("avqty"));
                minlbl.setText(rs.getString("minprice"));
                maxlbl.setText(rs.getString("maxprice"));
                wlbl.setText(rs.getString("defprice"));
                pricetxt.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    
    }
    
    private void subtotalgen() {
    
        if(pricetxt.getText().isEmpty()){
            subtotaltxt.setText("Rs. 0.00");
        }else if(qtytxt.getText().isEmpty()){
            subtotaltxt.setText("Rs. 0.00");
        }else{
            double price = Double.parseDouble(pricetxt.getText());
            double qty = Double.parseDouble(qtytxt.getText());
            subtotaltxt.setText("Rs. " + (price * qty));
        }
    
    }

    private void addtolist() {
    
        if (pnametxt.getText().isEmpty()) {
            pidtxt.requestFocus();
        }else if(stockcombo.getItemCount() == 0){
            JOptionPane.showMessageDialog(this, "No Stock");
            pidtxt.requestFocus();
        }else if(pricetxt.getText().isEmpty()){
            pricetxt.requestFocus();
        }else if(qtytxt.getText().isEmpty()){
            qtytxt.requestFocus();
        }else{
        
            double price = Double.parseDouble(pricetxt.getText());
            double qty = Double.parseDouble(qtytxt.getText());
            double min = Double.parseDouble(minlbl.getText());
            double max = Double.parseDouble(maxlbl.getText());
            double avqty = Double.parseDouble(stocklbl.getText());
            
            if(price < min || price > max || price <= 0 ){
                JOptionPane.showMessageDialog(this, "Invalid Price");
                pricetxt.requestFocus();
            }else if(qty > avqty || qty <= 0){
                JOptionPane.showMessageDialog(this, "Invalid Qty");
                qtytxt.requestFocus();
            }else{
                listing(1);
            }
        
        }
        
        totalgen();
    
    }

    private void listing(int i) {
    
        if(i == 1){
            Vector v = new Vector();
            v.add(stockcombo.getSelectedItem().toString());
            v.add(pidtxt.getText());
            v.add(pnametxt.getText());
            v.add(pricetxt.getText());
            v.add(qtytxt.getText());
            v.add(Double.parseDouble(pricetxt.getText()) * Double.parseDouble(qtytxt.getText()));
            dtm.addRow(v);
        }
        clear(3);
        
    }

    private void totalgen() {
    
        if(dtm.getRowCount() == 0){
        
        }else{
            Double total = 0.0;
            for (int i = 0; i < dtm.getRowCount(); i++) {
                total = total + Double.parseDouble(dtm.getValueAt(i, 5).toString());
            }
            totaltxt.setText(total + "");
            totaltxt2.setText(total + "");
            
            paymengen();
        }
    }



    private void saveinvoice() {
    
        if (cinfotxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a customer first");
            cidtxt.requestFocus();
        }else if(dtm.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "Please insert product first");
            pidtxt.requestFocus();
        }else if(totaltxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter Products");
            totalgen();
        }else{
                
           try {
            
                    int invid = d.nextnum("select max(id) from invoice_reg", "max(id)");
                    String cid = "0";
                    if(cinfotxt.getText().isEmpty()){

                    }else{
                        
                    cid = cidtxt.getText();

                    d.aud("insert into invoice_reg(id, date, total, discount, grandtotal, user_usename, customer_id, extra, active  ) "
                            + "Values( '"+invid+"' , '"+invdate.getText()+"' , '"+totaltxt.getText()+"' , '0.0' , '"+totaltxt.getText()+"' , '"+user+"' , '"+cid+"' , '"+extratxt.getText()+"' , '1' ) ");
                    int j = d.audr("insert into customer_payment (customer_id, date, payment, payment_type, extra, user_usename, previous, due , t) values('"+cidtxt.getText()+"' , '"+invdate.getText()+"' , '"+totaltxt.getText()+"'  , 'Cash' , ' ' , '"+user+"' , '0' , '0' , '1' ) ");
                                      
                    for (int i = 0; i < dtm.getRowCount(); i++) {

                        double buy = 0.0;
                        ResultSet rs = d.srh("select buyprice from stock where id = '"+dtm.getValueAt(i, 0)+"' ");
                        while (rs.next()) {                    
                            buy = rs.getDouble("buyprice");
                        }
                        double totalprofit = ( Double.parseDouble(dtm.getValueAt(i, 3).toString()) - buy ) * Double.parseDouble(dtm.getValueAt(i, 4).toString());

                        d.aud("insert into invoice(invoice_reg_id, stock_id, stock_product_id, price, qty, subtotal, cost, totalprofit, rqty) "
                            + "VALUES('"+invid+"' , '"+dtm.getValueAt(i, 0)+"' , '"+dtm.getValueAt(i, 1)+"' , '"+dtm.getValueAt(i, 3)+"' , '"+dtm.getValueAt(i, 4)+"' , '"+dtm.getValueAt(i, 5)+"' , '"+buy+"' , '"+totalprofit+"' , '0' )");
                        d.aud("update stock set avqty = avqty - '"+dtm.getValueAt(i, 4)+"' where id = '"+dtm.getValueAt(i, 0)+"'  ");

                    }

                    JOptionPane.showMessageDialog(this, "Saved Successfully");
                    ViewReport(invid);
                    clear(5);clear(3);clear(4);
                    pidtxt.requestFocus();

                    }
            
                } catch (Exception e) {
                    e.printStackTrace();
                }
                       
        }
        
    }
    
  
    
    public void ViewReport(int i){
        try {
        //1 compile jrxm file
        JasperReport jr = (JasperReport)JRLoader.loadObject(new File("C:\\Program Files (x86)\\Pulina Oil\\invoiceprint.jasper"));
        //2insert paramters
        java.util.Map m=new java.util.HashMap();
        //java.util.Date d=new Date(2015, 2, 236);
            m.put("ID", i);
        //3 run engine
            JasperPrint jp =JasperFillManager.fillReport(jr, m , d.getConnection());
        //4 view result
             //JRViewer jv=new JRViewer(jp);
             JasperViewer.viewReport(jp ,false);
             //JasperPrintManager.printReport(jp, true);
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    
    }
    
    public void customerset(String id){
        cidtxt.setText(id);
        
        try {
            ResultSet rs = d.srh("select * from customer where id = '"+id+"'");
            while (rs.next()) { 
                cididtxt.setText(id);
                cinfotxt.setText("<html><p> "+rs.getString("name")+" <br> "+rs.getString("tel")+" </p></html>");
            }
            pidtxt.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setpanel() {
        
        if(cashrb.isSelected()){
            cashpanel.setVisible(true);
            creditpanel.setVisible(false);
        }else if(creditrb.isSelected()){
            creditpanel.setVisible(true);
            cashpanel.setVisible(false);       
        }
    
    }

    private void savecreditinvoice() {
    
        if (cinfotxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a customer first");
            cidtxt.requestFocus();
        }else if (cidtxt.getText().equals("0")) {
            JOptionPane.showMessageDialog(this, "Cash Customer cannot credit");
            cidtxt.requestFocus();
        }else if(dtm.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "Please insert product first");
            pidtxt.requestFocus();
        }else if(totaltxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Enter Products");
            totalgen();
        }else{
            if(duetxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Please enter payment");
                paymengen();
                paymenttxt.requestFocus();
            }else {

                double total = Double.parseDouble(totaltxt2.getText());
                double payment = Double.parseDouble(paymenttxt.getText());
                
                if(payment > total){
                    int j = JOptionPane.showConfirmDialog(this, "Payment Cannot greater than total. Are you sure to continue ?" , "WARNING" , JOptionPane.YES_NO_OPTION);
                    if(j == 0){
                        geninvoicecredit();
                    }else{
                        
                    }
                }else{
                    geninvoicecredit();
                }
            }
            
        }
    
    }

    private void paymengen() {
        duetxt.setText("");
        if(totaltxt2.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please insert products to table");
            paymenttxt.setText("");
            pidtxt.requestFocus();
        }else if(paymenttxt.getText().isEmpty()){
            paymenttxt.requestFocus();
        }else{
            double total = Double.parseDouble(totaltxt.getText());
            double payment = Double.parseDouble(paymenttxt.getText());
            duetxt.setText(total - payment + "");
        }
    
    }

    private void geninvoicecredit() {
    try {
            
                    int invid = d.nextnum("select max(id) from invoice_reg", "max(id)");
                    String cid = "0";
                    if(cinfotxt.getText().isEmpty()){
                        JOptionPane.showMessageDialog(this, "please enter customer");
                    }else{
                    
                    
                    cid = cidtxt.getText();

                    d.aud("insert into invoice_reg(id, date, total, discount, grandtotal, user_usename, customer_id, extra, active  ) "
                            + "Values( '"+invid+"' , '"+invdate.getText()+"'  , '"+totaltxt.getText()+"' , '0.0' , '"+totaltxt.getText()+"' , '"+user+"' , '"+cid+"' , '"+extratxt.getText()+"' , '1' ) ");
                    
                    if(Double.parseDouble(paymenttxt.getText()) >  0.0){
                    int j1 = d.audr("insert into customer_payment (customer_id, date, payment, payment_type, extra, user_usename, previous, due , t) values('"+cidtxt.getText()+"' , '"+invdate.getText()+"'  , '"+paymenttxt.getText()+"'  , 'Cash' , ' ' , '"+user+"' , '"+totaltxt.getText()+"' , '"+duetxt.getText()+"' , '1' ) ");
                    }
                    
                    int j2 = d.aud("update customer set balance = balance + '"+duetxt.getText()+"' where id = '"+cid+"' ");
                            
                    for (int i = 0; i < dtm.getRowCount(); i++) {

                        double buy = 0.0;
                        ResultSet rs = d.srh("select buyprice from stock where id = '"+dtm.getValueAt(i, 0)+"' ");
                        while (rs.next()) {                    
                            buy = rs.getDouble("buyprice");
                        }
                        double totalprofit = ( Double.parseDouble(dtm.getValueAt(i, 3).toString()) - buy ) * Double.parseDouble(dtm.getValueAt(i, 4).toString());

                        d.aud("insert into invoice(invoice_reg_id, stock_id, stock_product_id, price, qty, subtotal, cost, totalprofit, rqty) "
                            + "VALUES('"+invid+"' , '"+dtm.getValueAt(i, 0)+"' , '"+dtm.getValueAt(i, 1)+"' , '"+dtm.getValueAt(i, 3)+"' , '"+dtm.getValueAt(i, 4)+"' , '"+dtm.getValueAt(i, 5)+"' , '"+buy+"' , '"+totalprofit+"' , '0' )");
                        d.aud("update stock set avqty = avqty - '"+dtm.getValueAt(i, 4)+"' where id = '"+dtm.getValueAt(i, 0)+"'  ");

                    }

                    JOptionPane.showMessageDialog(this, "Saved Successfully");
                    ViewReport(invid);
                    clear(5);clear(3);clear(4);
                    pidtxt.requestFocus();

                    }
            
                } catch (Exception e) {
                    e.printStackTrace();
                }}
    
}
