/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.awt.Toolkit;
import java.io.File;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Thisara Sampath
 */
public class search_invoice extends javax.swing.JPanel {

    /**
     * Creates new form Stock_search
     */
    DB d = new DB();
    DefaultTableModel dtm ;
    DecimalFormat df;
    SimpleDateFormat sdf ;
    SimpleDateFormat sdf1 ;
    
    public search_invoice() {
        initComponents();
        setFronttext();
        settable();
        df = new DecimalFormat(" #,##0.00");
        sdf = new SimpleDateFormat("yyyy MM dd");
        sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        todate.setDateFormat(sdf1);
        fromdate.setDateFormat(sdf1);
        dtm= (DefaultTableModel) jTable1.getModel();
        searchtable();
    }
    
    private void settable() {
    
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        jTable1.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
    
    }

    private void setFronttext(){
        setPrompt(usertxt , "Cashier");
        setPrompt(invoiceidtxt , "Invoice ID");
        setPrompt(cidtxt , "Customer ID");
        setPrompt(morethsn , "More than");
        setPrompt(lessthan , "Less than");
        setPrompt(eidtxt , "Invoice ID");
        setPrompt(etotaltxt , "Total");
        
    }
    
    private void setPrompt( JTextField field , String text ){
        PromptSupport.setPrompt(text, field);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, field);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        invoiceidtxt = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        cidtxt = new javax.swing.JTextField();
        usertxt = new javax.swing.JTextField();
        fromdate = new datechooser.beans.DateChooserCombo();
        todate = new datechooser.beans.DateChooserCombo();
        morethsn = new javax.swing.JTextField();
        lessthan = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        invoiceqty = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        totalamounttxt = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        customerstxt = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        eidtxt = new javax.swing.JTextField();
        etotaltxt = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(668, 462));
        setMinimumSize(new java.awt.Dimension(668, 462));
        setPreferredSize(new java.awt.Dimension(668, 462));
        setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice ID", "Customer", "Cashier", "Date", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 153));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(260, 30, 400, 250);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search By"));

        invoiceidtxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        invoiceidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invoiceidtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                invoiceidtxtKeyTyped(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        cidtxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        cidtxt.setEnabled(false);
        cidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cidtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cidtxtKeyTyped(evt);
            }
        });

        usertxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        usertxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usertxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usertxtKeyTyped(evt);
            }
        });

        fromdate.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                fromdateOnCommit(evt);
            }
        });
        fromdate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                fromdateOnSelectionChange(evt);
            }
        });

        todate.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                todateOnCommit(evt);
            }
        });
        todate.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                todateOnSelectionChange(evt);
            }
        });

        morethsn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        morethsn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                morethsnKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                morethsnKeyTyped(evt);
            }
        });

        lessthan.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        lessthan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lessthanKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lessthanKeyTyped(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invoiceidtxt)
                    .addComponent(cidtxt)
                    .addComponent(usertxt)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(morethsn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(fromdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(todate, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(lessthan))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(invoiceidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usertxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(morethsn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lessthan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        add(jPanel2);
        jPanel2.setBounds(0, 20, 250, 268);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setOpaque(false);
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setOpaque(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/inv (3).png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Invoice Qty");

        invoiceqty.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        invoiceqty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(invoiceqty, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invoiceqty, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 160));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setOpaque(false);

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Total Amount");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/inv (1).png"))); // NOI18N

        totalamounttxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        totalamounttxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(totalamounttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalamounttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jPanel6.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 130, 150));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel6.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 10, 120));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setOpaque(false);

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Customers");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/inv (2).png"))); // NOI18N

        customerstxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        customerstxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerstxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerstxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 140, 140));

        add(jPanel6);
        jPanel6.setBounds(0, 300, 430, 124);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Invoice Deatails", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12))); // NOI18N

        eidtxt.setEditable(false);
        eidtxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        eidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                eidtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eidtxtKeyTyped(evt);
            }
        });

        etotaltxt.setEditable(false);
        etotaltxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        etotaltxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                etotaltxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                etotaltxtKeyTyped(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        jButton8.setText("Invoice Details");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(eidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 5, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etotaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        add(jPanel3);
        jPanel3.setBounds(450, 300, 210, 137);
    }// </editor-fold>//GEN-END:initComponents

    private void invoiceidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceidtxtKeyReleased
        searchtable();
    }//GEN-LAST:event_invoiceidtxtKeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        searchtable();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(eidtxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please select a invoice from table");
        }else{
            try {
                    ViewReport(Integer.parseInt(eidtxt.getText()));
            } catch (Exception e) {
                e.printStackTrace();
            }
            
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void cidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cidtxtKeyReleased
        searchtable();
    }//GEN-LAST:event_cidtxtKeyReleased

    private void usertxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usertxtKeyReleased
        searchtable();
    }//GEN-LAST:event_usertxtKeyReleased

    private void morethsnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_morethsnKeyReleased
        searchtable();
    }//GEN-LAST:event_morethsnKeyReleased

    private void lessthanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lessthanKeyReleased
        searchtable();
    }//GEN-LAST:event_lessthanKeyReleased

    private void eidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eidtxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_eidtxtKeyReleased

    private void etotaltxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_etotaltxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_etotaltxtKeyReleased

    private void todateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_todateOnSelectionChange
        fromdate.setMaxDate(todate.getCurrent());
        searchtable();
    }//GEN-LAST:event_todateOnSelectionChange

    private void fromdateOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_fromdateOnSelectionChange
        todate.setMinDate(fromdate.getCurrent());
        searchtable();
    }//GEN-LAST:event_fromdateOnSelectionChange

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int i = jTable1.getSelectedRow();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        eidtxt.setText(dtm.getValueAt(i, 0).toString());
        etotaltxt.setText(dtm.getValueAt(i, 4).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        clear(0);
        searchtable();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void fromdateOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_fromdateOnCommit
        searchtable();
    }//GEN-LAST:event_fromdateOnCommit

    private void todateOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_todateOnCommit
        searchtable();
    }//GEN-LAST:event_todateOnCommit

    private void invoiceidtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceidtxtKeyTyped
         char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) )) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        } 
        
        if(invoiceidtxt.getText().length() > 10){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_invoiceidtxtKeyTyped

    private void cidtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cidtxtKeyTyped
         char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) )) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        } 
        
        if(cidtxt.getText().length() > 10){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_cidtxtKeyTyped

    private void usertxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usertxtKeyTyped
        char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || key.equals("/") || key.equals("(") || key.equals(")") || key.equals("-") || key.equals("+") 
                || key.equals("/")|| key.equals(",")|| key.equals(".") || key.equals(".") || Character.isAlphabetic(c))) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }

    }//GEN-LAST:event_usertxtKeyTyped

    private void morethsnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_morethsnKeyTyped
        char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) )) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        } 
        
        if(morethsn.getText().length() > 10){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_morethsnKeyTyped

    private void lessthanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lessthanKeyTyped
        char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) )) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        } 
        
        if(lessthan.getText().length() > 10){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_lessthanKeyTyped

    private void eidtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eidtxtKeyTyped
         char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) )) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        } 
        
        if(eidtxt.getText().length() > 10){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_eidtxtKeyTyped

    private void etotaltxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_etotaltxtKeyTyped
         char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) )) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        } 
        
        if(etotaltxt.getText().length() > 10){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_etotaltxtKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cidtxt;
    private javax.swing.JLabel customerstxt;
    private javax.swing.JTextField eidtxt;
    private javax.swing.JTextField etotaltxt;
    private datechooser.beans.DateChooserCombo fromdate;
    private javax.swing.JTextField invoiceidtxt;
    private javax.swing.JLabel invoiceqty;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lessthan;
    private javax.swing.JTextField morethsn;
    private datechooser.beans.DateChooserCombo todate;
    private javax.swing.JLabel totalamounttxt;
    private javax.swing.JTextField usertxt;
    // End of variables declaration//GEN-END:variables

    private void searchtable() {
        dtm.setRowCount(0);
        eidtxt.setText("");
        etotaltxt.setText("");
        
       Double mintotal ;
       Double maxtotal;
       
       if(morethsn.getText().isEmpty()){
           mintotal = 0.0;
       }else{
           mintotal = Double.parseDouble(morethsn.getText());
       }
       
       if(lessthan.getText().isEmpty()){
           maxtotal = 999999.0;
       }else{
           maxtotal = Double.parseDouble(lessthan.getText());
       }
       
       
       try {
            Double total = 0.0;
            totalamounttxt.setText(total +"");
            
            ResultSet rs1 = d.srh("select * from invoice_reg inner join customer on invoice_reg.customer_id = customer.id where invoice_reg.id LIKE '"+invoiceidtxt.getText()+"%' AND customer_id LIKE '"+customerstxt.getText()+"%' AND user_usename LIKE '"+usertxt.getText()+"%' AND total >= '"+mintotal+"' AND total <= '"+maxtotal+"' AND  date >= '"+fromdate.getText()+" 00:00:00 ' and date <= '"+todate.getText()+" 23:59:59' ");
            while(rs1.next()){
                Vector v = new Vector();
                v.add(rs1.getString("invoice_reg.id"));
                v.add(rs1.getString("customer.name"));
                v.add(rs1.getString("user_usename"));
                v.add(rs1.getDate("date") + " " + rs1.getTime("date"));
                v.add(df.format(rs1.getDouble("total")));
                dtm.addRow(v);
                total = total + Double.parseDouble(rs1.getString("total"));
                totalamounttxt.setText(df.format(total) +"");
            }
           customers();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void clear(int i){
        if(i == 0){
            invoiceidtxt.setText("");
            cidtxt.setText("");
            usertxt.setText("");
            fromdate.setCurrent(Calendar.getInstance());
            todate.setCurrent(Calendar.getInstance());
            morethsn.setText("");
            lessthan.setText("");        
        }else if(i==1){
            eidtxt.setText("");
            etotaltxt.setText("");
        }
        searchtable();
    }

    private void customers() {
        Double mintotal ;
        Double maxtotal;
       
        if(morethsn.getText().isEmpty()){
           mintotal = 0.0;
        }else{
           mintotal = Double.parseDouble(morethsn.getText());
        }
       
        if(lessthan.getText().isEmpty()){
           maxtotal = 999999.0;
        }else{
           maxtotal = Double.parseDouble(lessthan.getText());
        }
       
        try {
            int customer = 0;
            ResultSet rs2 = new DB().srh("select DISTINCT customer_id from invoice_reg where id LIKE '"+invoiceidtxt.getText()+"%' AND customer_id LIKE '"+customerstxt.getText()+"%' AND user_usename LIKE '"+usertxt.getText()+"%' AND total >= '"+mintotal+"' AND total <= '"+maxtotal+"' AND date >= '"+fromdate.getText()+" 00:00:00 ' and date <= '"+todate.getText()+" 23:59:59' ");
            while(rs2.next()){
                customer = customer + 1;
            }
            invoiceqty.setText(jTable1.getRowCount() + "");
            customerstxt.setText(customer + ""); 
            
        } catch (Exception e) {
            e.printStackTrace();
        }
            
    }

    public void ViewReport(int i){
    try
    {
      JasperReport jr = (JasperReport)JRLoader.loadObject(new File("C:\\Program Files (x86)\\POS\\invoiceprint.jasper"));
      
      Map m = new HashMap();
      
      m.put("ID", Integer.valueOf(i));
      
      JasperPrint jp = JasperFillManager.fillReport(jr, m, this.d.getConnection());
      
      //JasperViewer.viewReport(jp, false);
      JasperPrintManager.printReport(jp, true);
    }
    catch (Exception e)
    {
      JOptionPane.showMessageDialog(this, e);
    }
  }
}
