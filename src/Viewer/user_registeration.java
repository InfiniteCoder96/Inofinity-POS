/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.plaf.BorderUIResource;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Ashan Lakshitha
 */
public class user_registeration extends javax.swing.JDialog {

    DB db = new DB();
    private int Xmouse;
    private int Ymouse;
    /**
     * Creates new form product_registration
     */
    public user_registeration(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        existlbl.setVisible(false);
        setFrontText();
        clear(1);
        pidtxt.requestFocus();
    }

    private void setFrontText(){
        setPront(pidtxt, "username");
        setPront(ps1, "Password");
    }
    
    private void setPront(JTextField a , String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }
    
    private void setPront(JPasswordField a , String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pidtxt = new javax.swing.JTextField();
        addtolistbtn = new javax.swing.JButton();
        addtolistbtn1 = new javax.swing.JButton();
        existlbl = new javax.swing.JLabel();
        ps1 = new javax.swing.JPasswordField();
        existlbl1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        existlbl2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ps2 = new javax.swing.JPasswordField();
        existlbl3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        existlbl4 = new javax.swing.JLabel();
        addtolistbtn2 = new javax.swing.JButton();
        usernamecombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        pidtxt.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        pidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidtxtActionPerformed(evt);
            }
        });
        pidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pidtxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pidtxtKeyTyped(evt);
            }
        });

        addtolistbtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        addtolistbtn.setText("Clear");
        addtolistbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtolistbtnActionPerformed(evt);
            }
        });

        addtolistbtn1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        addtolistbtn1.setText("Save");
        addtolistbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtolistbtn1ActionPerformed(evt);
            }
        });

        existlbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        existlbl.setForeground(new java.awt.Color(204, 0, 0));
        existlbl.setText("* This username Already Exist");

        ps1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        ps1.setText("jPasswordField1");
        ps1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ps1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ps1KeyTyped(evt);
            }
        });

        existlbl1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        existlbl1.setForeground(new java.awt.Color(51, 51, 255));
        existlbl1.setText("password can include a-z (lowercase) or 0-9 only");

        jComboBox1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "admin", "accountant", "stock", "cashier" }));

        existlbl2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        existlbl2.setText("Select User Type");

        jCheckBox1.setText("Show Password");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("New User Registration");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/login1-128.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("Update User Details");

        ps2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        ps2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ps2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ps2KeyTyped(evt);
            }
        });

        existlbl3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        existlbl3.setForeground(new java.awt.Color(51, 51, 255));
        existlbl3.setText("password can include a-z (lowercase) or 0-9 only");

        jComboBox2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "admin", "accountant", "stock", "cashier" }));

        existlbl4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        existlbl4.setText("New User Type");

        addtolistbtn2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        addtolistbtn2.setText("Update");
        addtolistbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtolistbtn2ActionPerformed(evt);
            }
        });

        usernamecombo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        usernamecombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "admin", "accountant", "stock", "cashier" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(existlbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ps1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pidtxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox1)
                                .addComponent(existlbl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addtolistbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addtolistbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(existlbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(161, 161, 161))))
                        .addGap(18, 18, 18)))
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ps2)
                                    .addComponent(addtolistbtn2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox2, 0, 275, Short.MAX_VALUE)
                                    .addComponent(usernamecombo, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(existlbl4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(existlbl3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(usernamecombo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(existlbl3)
                            .addGap(0, 0, 0)
                            .addComponent(ps2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(existlbl4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(addtolistbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(pidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(existlbl)
                            .addGap(14, 14, 14)
                            .addComponent(existlbl1)
                            .addGap(0, 0, 0)
                            .addComponent(ps1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(existlbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(addtolistbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addtolistbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidtxtActionPerformed
        if(pidtxt.getText().isEmpty() || existlbl.isVisible()){
           // ps1.requestFocus();
        }else{
            ps1.requestFocus();
        }
    }//GEN-LAST:event_pidtxtActionPerformed

    private void pidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidtxtKeyReleased
        if(pidtxt.getText().isEmpty()){
            pidtxt.setBackground(Color.white);
            existlbl.setVisible(false);
        }else{
            try {
                ResultSet rs = db.srh("select usename from user where usename = '"+pidtxt.getText()+"'");
                if(rs.next()){
                    pidtxt.setBackground(Color.yellow);
                    existlbl.setVisible(true);
                    
                }else{
                    pidtxt.setBackground(Color.white);
                    existlbl.setVisible(false);
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_pidtxtKeyReleased

    private void addtolistbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtolistbtnActionPerformed
        clear(1);
    }//GEN-LAST:event_addtolistbtnActionPerformed

    private void addtolistbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtolistbtn1ActionPerformed
        save();
    }//GEN-LAST:event_addtolistbtn1ActionPerformed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged

    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased

    }//GEN-LAST:event_formMouseReleased

    private void pidtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidtxtKeyTyped
        char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || Character.isLowerCase(c) )) {
            evt.consume();
        }
    }//GEN-LAST:event_pidtxtKeyTyped

    private void ps1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ps1KeyTyped
        char c = evt.getKeyChar();
        
        String key = String.valueOf(c);
        
        if  (!(Character.isDigit(c) || Character.isLowerCase(c) )) {
            evt.consume();
        }
    }//GEN-LAST:event_ps1KeyTyped

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()){
            ps1.setEchoChar((char)0);
        }else{
            ps1.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void ps1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ps1KeyReleased
        
    }//GEN-LAST:event_ps1KeyReleased

    private void ps2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ps2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ps2KeyReleased

    private void ps2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ps2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ps2KeyTyped

    private void addtolistbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtolistbtn2ActionPerformed
        updateuserdetails();
    }//GEN-LAST:event_addtolistbtn2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(user_registeration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(user_registeration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(user_registeration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(user_registeration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                user_registeration dialog = new user_registeration(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtolistbtn;
    private javax.swing.JButton addtolistbtn1;
    private javax.swing.JButton addtolistbtn2;
    private javax.swing.JLabel existlbl;
    private javax.swing.JLabel existlbl1;
    private javax.swing.JLabel existlbl2;
    private javax.swing.JLabel existlbl3;
    private javax.swing.JLabel existlbl4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField pidtxt;
    private javax.swing.JPasswordField ps1;
    private javax.swing.JPasswordField ps2;
    private javax.swing.JComboBox usernamecombo;
    // End of variables declaration//GEN-END:variables

    

    private void save() {
        String pass = String.valueOf(ps1.getPassword());
        System.out.println(pass);
        
        if(existlbl.isVisible()){
            pidtxt.requestFocus();
        }else if (pidtxt.getText().isEmpty()){
            pidtxt.requestFocus();
        }else if(ps1.getPassword().toString().isEmpty()){
            ps1.requestFocus();
        }else{
        
        try {
            int i = db.aud("insert into user (usename, password, type) values ( '"+pidtxt.getText()+"' , '"+pass+"' , '"+jComboBox1.getSelectedItem().toString()+"' ) ");
            if(i == 1){
                JOptionPane.showMessageDialog(this, "Saved Succesfully");
                clear(1);
            }else{
                JOptionPane.showMessageDialog(this , "User Save Failed. ");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        }
 }

    

    private void clear(int i) {
        if(i == 1){
            pidtxt.setText("");
            ps1.setText("");
            ps2.setText("");
            loadusers();
            pidtxt.requestFocus();
        }else if(i == 2){
            
        }else if(i == 3){
            ps1.setText("");
            ps2.setText("");
            
        }
    
    }

    private void updateuserdetails() {
    
    
        String pass = String.valueOf(ps2.getPassword());
        
        if (usernamecombo.getSelectedItem().toString().isEmpty()){
            pidtxt.requestFocus();
        }else if(ps2.getPassword().toString().isEmpty()){
            ps2.requestFocus();
        }else{
        
        try {
            int i = db.aud("update user set password = '"+pass+"' , type = '"+jComboBox2.getSelectedItem().toString()+"' where usename = '"+usernamecombo.getSelectedItem().toString()+"' ");
            if(i == 1){
                JOptionPane.showMessageDialog(this, "Updated Succesfully");
                loadusers();
                clear(1);
            }else{
                JOptionPane.showMessageDialog(this , "User Update Failed. ");
                loadusers();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        }
    
    
    }

    private void loadusers(){
        usernamecombo.removeAllItems();
            try {
                ResultSet rs = db.srh("select * from user");
                while(rs.next()){
                    usernamecombo.addItem(rs.getString("usename"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
    }
    

    
}
