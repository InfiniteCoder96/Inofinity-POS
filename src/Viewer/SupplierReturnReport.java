/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Viewer;

import Model.DB;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Ashan Lakshitha
 */
public class SupplierReturnReport extends javax.swing.JDialog {

    /**
     * Creates new form InvoiceReturn
     */
    DB d = new DB();
    DefaultTableModel dtm;
    DefaultTableModel dtm1;
    String user = "dinesh";
    private int Xmouse;
    private int Ymouse;
    
    public SupplierReturnReport(java.awt.Frame parent, boolean modal ,String u) {
        super(parent, modal);
        initComponents();
        user = u;
        dtm = (DefaultTableModel) invtable.getModel();
        supplierload();
        setFrontText();
    }
    
    private void setFrontText(){
    }
    
    private void setPront(JTextField a , String text) {
        PromptSupport.setPrompt(text, a);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, a);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        suppliercombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        invtable = new javax.swing.JTable();
        supplbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        suppliercombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        suppliercombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                suppliercomboItemStateChanged(evt);
            }
        });
        jPanel3.add(suppliercombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 220, 40));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("Supplier Information");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 10, 130, -1));

        jScrollPane2.setBackground(new java.awt.Color(102, 102, 255));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        invtable.setFont(new java.awt.Font("Iskoola Pota", 0, 16)); // NOI18N
        invtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Product ID", "Name", "Return_Qty", "Price", "Total", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invtable.setRowHeight(20);
        invtable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        invtable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                invtableFocusGained(evt);
            }
        });
        invtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invtableMouseClicked(evt);
            }
        });
        invtable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                invtablePropertyChange(evt);
            }
        });
        invtable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                invtableVetoableChange(evt);
            }
        });
        jScrollPane2.setViewportView(invtable);
        if (invtable.getColumnModel().getColumnCount() > 0) {
            invtable.getColumnModel().getColumn(1).setResizable(false);
            invtable.getColumnModel().getColumn(1).setPreferredWidth(35);
            invtable.getColumnModel().getColumn(2).setResizable(false);
            invtable.getColumnModel().getColumn(2).setPreferredWidth(100);
            invtable.getColumnModel().getColumn(3).setResizable(false);
            invtable.getColumnModel().getColumn(3).setPreferredWidth(30);
        }

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 790, 280));

        supplbl.setText("0");
        jPanel3.add(supplbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 30, 20));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("Return Report");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 30, 180, -1));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("Supplier");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 140, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/desktop-pc-computer-128.png"))); // NOI18N
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 180, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 95, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    int selected = 0;
    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_formMouseReleased

    private void suppliercomboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_suppliercomboItemStateChanged
        if(suppliercombo.getItemCount() == 0){

        }else{
            setsupp();
            
        }

    }//GEN-LAST:event_suppliercomboItemStateChanged

    private void invtableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_invtableVetoableChange
        //
    }//GEN-LAST:event_invtableVetoableChange

    private void invtablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_invtablePropertyChange
        //
    }//GEN-LAST:event_invtablePropertyChange

    private void invtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invtableMouseClicked
        
    }//GEN-LAST:event_invtableMouseClicked

    private void invtableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_invtableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_invtableFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierReturnReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierReturnReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierReturnReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierReturnReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SupplierReturnReport dialog = new SupplierReturnReport(new javax.swing.JFrame(), true ,  "dinesh");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable invtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel supplbl;
    private javax.swing.JComboBox suppliercombo;
    // End of variables declaration//GEN-END:variables

    private void setsupp(){
    
        try {
            ResultSet rs = d.srh("select * from supplier where name = '"+suppliercombo.getSelectedItem().toString()+"' ");
            while (rs.next()) {                
                supplbl.setText(rs.getString("id"));
                loadtable();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }
    
    private void loadtable() {
        
        try{
            dtm.setRowCount(0);
            
            ResultSet rs = d.srh("SELECT * FROM supplier_return inner join product on "
                    + "supplier_return.stock_product_id = product.id "
                    + "where stock_supplier_id = '"+supplbl.getText()+"'  ");
            while (rs.next()) {                
                Vector v = new Vector();
                v.add(rs.getString("returnid"));
                v.add(rs.getString("stock_product_id"));
                v.add(rs.getString("name"));
                v.add(rs.getDouble("qty"));
                v.add(rs.getDouble("price"));                
                v.add(rs.getDouble("subtotal"));
                v.add(rs.getDouble("date"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    
    }
    

    /*
    
    private void checklist(){
    
        if(qtytxt.getText().isEmpty()){
                
            }else{
                double reqty =  Double.parseDouble(qtytxt.getText());
                if( selected == 0){
                    JOptionPane.showMessageDialog(this, "Please select a sale to Return");
                }else if(avqty < reqty | 0 >= reqty ){
                    JOptionPane.showMessageDialog(this, "Incorrect qty or Already Returned ");
                    qtytxt.requestFocus();
                }else{
        
        if(returntable.getRowCount() == 0){
            addtolist();
        }else{
            int r = returntable.getRowCount();
            System.out.println(r);
            int sr = invtable.getSelectedRow();
            int s = Integer.parseInt(invtable.getValueAt(sr, 0).toString());
            System.out.println(s);
            
            for (int i = 0; i < r; i++) {
                
                int rowvalue = Integer.parseInt(returntable.getValueAt(i, 1).toString());
                System.out.println(rowvalue);
                
                if(s == rowvalue){
                    int confirm = JOptionPane.showConfirmDialog(this, "Are you want repalce the same product ?", "Confirmation Dialog" , JOptionPane.YES_NO_OPTION);
                    if (confirm == 0) {
                        dtm1.removeRow(i);
                        addtolist();
                        return;
                    } else {
                        return;
                    }
                
                }else if(i+1==r){
                    addtolist();
                }
             }
            
            
        }
        }
            
        }
    
    }
*/


    
    /*
    private void returnPro() {
        int a = 0; 
        int b = 0;
        int c = 0;
        
        try {
                int maxid = d.nextnum("select max(rid) from invoice_return", "max(rid)");
                
                for (int i = 0; i < returntable.getRowCount(); i++) {
                    String invid = invsearchtxt.getText();
                    String saleid = returntable.getValueAt(i, 1).toString();
                    String proid = returntable.getValueAt(i, 2).toString();
                    String subtotal = returntable.getValueAt(i, 7).toString();
                    String price = returntable.getValueAt(i, 5).toString();
                    String rstockid = returntable.getValueAt(i, 4).toString();
                    String rqty =  returntable.getValueAt(i, 6).toString();
                    String cus =  returntable.getValueAt(i, 8).toString();
                    
                    b = d.aud("insert into invoice_return(  invoice_saleid, invoice_invoice_reg_id, invoice_stock_id, invoice_stock_product_id, qty, price, total ,rdate , rid , cus ) "
                            + "Values( '"+saleid+"' , '"+invid+"' , '"+rstockid+"' , '"+proid+"' , '"+rqty+"' , '"+price+"' , '"+subtotal+"' , NOW() , '"+maxid+"'  , '"+cus+"' )");
                    a = d.aud("update stock set avqty = avqty + '"+rqty+"' where id = '"+rstockid+"' ");
                    a = d.aud("update invoice set rqty = rqty + '"+rqty+"' where saleid = '"+saleid+"' ");
                    d.aud("update customer set balance = balance - '"+subtotal+"' where id = '"+cus+"' ");
                    
                    
                }
                
                if(a==1 | b==1){
                    JOptionPane.showMessageDialog(this, "Return Products Successfully. ");
                    //printReport(maxid);
                    clear(5);
                }else{
                    JOptionPane.showMessageDialog(this, "Return Failed ");
                }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    
    }

*/
    
    private void supplierload() {
    try {
            suppliercombo.removeAllItems();
            ResultSet rs = d.srh("select * from supplier ");
            while (rs.next()) {                
                suppliercombo.addItem(rs.getString("name"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void printReport(int returnid) {
        try {
            //1 compile jrxm file
        JasperReport jr = JasperCompileManager.compileReport(getClass().getResourceAsStream("/Reports/Return-reciept.jrxml"));
        //2insert paramters
        java.util.Map m = new java.util.HashMap();
        m.put("ID", returnid);
        //3 run engine
        JasperPrint jp = JasperFillManager.fillReport(jr, m, d.getConnection());
        //4 view result
        //JasperViewer.viewReport(jp, false);
        //JRViewer jv = new JRViewer(jp);
        JasperPrintManager.printReport(jp, true);
        //
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
}
